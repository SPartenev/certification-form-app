"use client"

import type React from "react"
import { useState } from "react"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Textarea } from "@/components/ui/textarea"
import { Checkbox } from "@/components/ui/checkbox"
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
import { Separator } from "@/components/ui/separator"
import { Building2, Shield, Leaf, Lock, Utensils, Car, AlertTriangle, Send } from "lucide-react"

interface FormData {
  applicationTypes: string[]
  organizationName: string
  eik: string
  contactPerson: string
  email: string
  phone: string
  additionalInfo: string
  standards: string[]
  certificationScope: string
  sites: Array<{
    address: string
    processes: string
    employees: string
    type: string
  }>
  multiSiteManagement: string[]
  outsourcedProcesses: string
  consultantServices: string
  regulatoryRequirements: string
  developNewProducts: string
  manufactureProducts: string
  otherCertifications: string
  auditLanguage: string
  auditDeadline: string
  filledBy: string
  iso45001: {
    hazards: string
    chemicals: string
    installations: string
    regulations: string
    offSitePersonnel: string
    accidents: string
    lawsuits: string
  }
  iso14001: {
    aspects: string
    location: string
    requirements: string
    indirectAspects: string
    risks: string
    automation: string
  }
  iso27001: {
    category1: string
    category2: string
    category3: string
    category4: string
    category5: string
    category6: string
    employees: {
      readOnly: string
      noPhysicalAccess: string
      limitedAccess: string
      fullAccessRestricted: string
    }
  }
  iso22000: {
    haccp: string
    products: string
    automation: string
  }
  iso39001: {
    applicableStatements: string[]
    requirements: string
    nonApplicable: string
    accidents: string
  }
  iso37001: {
    processesOutOfScope: string
    countries: string
    requirements: string
    sites: Array<{
      address: string
      type: string
      totalEmployees: string
      processes: { [key: string]: string }
    }>
    lowRiskEmployees: string
    controlledEntities: string
    controllingEntities: string
    investigations: string
    publicRevenue: string
    additionalInfo: string
  }
  transfer: {
    validCertificate: string
    reasons: string
    complaints: string
    requirements: string
    documents: string[]
  }
  integrated: {
    statements: string[]
  }
}

export function CertificationForm() {
  const [formData, setFormData] = useState<FormData>({
    applicationTypes: [],
    organizationName: "",
    eik: "",
    contactPerson: "",
    email: "",
    phone: "",
    additionalInfo: "",
    standards: [],
    certificationScope: "",
    sites: [{ address: "", processes: "", employees: "", type: "" }],
    multiSiteManagement: [],
    outsourcedProcesses: "",
    consultantServices: "",
    regulatoryRequirements: "",
    developNewProducts: "",
    manufactureProducts: "",
    otherCertifications: "",
    auditLanguage: "",
    auditDeadline: "",
    filledBy: "",
    iso45001: {
      hazards: "",
      chemicals: "",
      installations: "",
      regulations: "",
      offSitePersonnel: "",
      accidents: "",
      lawsuits: "",
    },
    iso14001: {
      aspects: "",
      location: "",
      requirements: "",
      indirectAspects: "",
      risks: "",
      automation: "",
    },
    iso27001: {
      category1: "",
      category2: "",
      category3: "",
      category4: "",
      category5: "",
      category6: "",
      employees: {
        readOnly: "",
        noPhysicalAccess: "",
        limitedAccess: "",
        fullAccessRestricted: "",
      },
    },
    iso22000: {
      haccp: "",
      products: "",
      automation: "",
    },
    iso39001: {
      applicableStatements: [],
      requirements: "",
      nonApplicable: "",
      accidents: "",
    },
    iso37001: {
      processesOutOfScope: "",
      countries: "",
      requirements: "",
      sites: [{ address: "", type: "", totalEmployees: "", processes: {} }],
      lowRiskEmployees: "",
      controlledEntities: "",
      controllingEntities: "",
      investigations: "",
      publicRevenue: "",
      additionalInfo: "",
    },
    transfer: {
      validCertificate: "",
      reasons: "",
      complaints: "",
      requirements: "",
      documents: [],
    },
    integrated: {
      statements: [],
    },
  })

  const handleStandardChange = (standard: string, checked: boolean) => {
    setFormData((prev) => ({
      ...prev,
      standards: checked ? [...prev.standards, standard] : prev.standards.filter((s) => s !== standard),
    }))
  }

  const handleApplicationTypeChange = (value: string, label: string, checked: boolean) => {
    setFormData((prev) => ({
      ...prev,
      applicationTypes: checked
        ? [...prev.applicationTypes, label]
        : prev.applicationTypes.filter((t) => t !== label),
    }))
  }

  const addSite = () => {
    setFormData((prev) => ({
      ...prev,
      sites: [...prev.sites, { address: "", processes: "", employees: "", type: "" }],
    }))
  }

  const updateSite = (index: number, field: string, value: string) => {
    setFormData((prev) => ({
      ...prev,
      sites: prev.sites.map((site, i) => (i === index ? { ...site, [field]: value } : site)),
    }))
  }

  const handleMultiSiteChange = (item: string, checked: boolean) => {
    setFormData((prev) => ({
      ...prev,
      multiSiteManagement: checked
        ? [...prev.multiSiteManagement, item]
        : prev.multiSiteManagement.filter((i) => i !== item),
    }))
  }

  const standardsConfig = [
    { id: "iso9001", label: "ISO 9001:2015", icon: Building2, color: "bg-orange-500" },
    { id: "iso22000", label: "ISO 22000:2018", icon: Utensils, color: "bg-orange-500" },
    { id: "iso45001", label: "ISO 45001:2018", icon: Shield, color: "bg-orange-500" },
    { id: "iso39001", label: "ISO 39001:2012", icon: Car, color: "bg-orange-500" },
    { id: "iso14001", label: "ISO 14001:2015", icon: Leaf, color: "bg-orange-500" },
    { id: "iso27001", label: "ISO/IEC 27001:2022", icon: Lock, color: "bg-orange-500" },
    { id: "iso37001", label: "ISO 37001:2016", icon: AlertTriangle, color: "bg-orange-500" },
  ]

  const multiSiteOptions = [
    "–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è—Ç–∞ –∏–º–∞ –µ–¥–Ω–∞ –æ–±—â–∞ —Å–∏—Å—Ç–µ–º–∞ –∑–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞ –≤—Å–∏—á–∫–∏ –ø–ª–æ—â–∞–¥–∫–∏.",
    "–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è—Ç–∞ –∏–º–∞ –µ–¥–∏–Ω–Ω–æ —Ü–µ–Ω—Ç—Ä–∞–ª–Ω–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, –∫–æ–µ—Ç–æ –µ —á–∞—Å—Ç –æ—Ç –Ω–µ—è –∏ –Ω–µ –µ –≤—ä–∑–ª–æ–∂–µ–Ω–æ –Ω–∞ –≤—ä–Ω—à–µ–Ω –∏–∑–ø—ä–ª–Ω–∏—Ç–µ–ª.",
    "–¶–µ–Ω—Ç—Ä–∞–ª–Ω–æ—Ç–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–º–∞ –ø—Ä–∞–≤–æ–º–æ—â–∏—è –¥–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–≤–∞, –≤–Ω–µ–¥—Ä—è–≤–∞ –∏ –ø–æ–¥–¥—ä—Ä–∂–∞ –µ–¥–∏–Ω–Ω–∞—Ç–∞ —Å–∏—Å—Ç–µ–º–∞ –∑–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞ –≤—Å–∏—á–∫–∏ –ø–ª–æ—â–∞–¥–∫–∏ –≤ –æ–±—Ö–≤–∞—Ç–∞ –Ω–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è.",
    "–ü—Ä–æ–≤–µ–∂–¥–∞ —Å–µ –æ–±—â –ø—Ä–µ–≥–ª–µ–¥ –æ—Ç —Ä—ä–∫–æ–≤–æ–¥—Å—Ç–≤–æ—Ç–æ –∑–∞ —Ü–µ–Ω—Ç—Ä–∞–ª–Ω–æ—Ç–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ –ø–ª–æ—â–∞–¥–∫–∏—Ç–µ.",
    "–í—Å–∏—á–∫–∏ –ø–ª–æ—â–∞–¥–∫–∏ —Å–∞ –≤–∫–ª—é—á–µ–Ω–∏ –≤ –ø—Ä–æ–≥—Ä–∞–º–∞—Ç–∞ –∑–∞ –≤—ä—Ç—Ä–µ—à–Ω–∏ –æ–¥–∏—Ç–∏ –Ω–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è—Ç–∞.",
    "–¶–µ–Ω—Ç—Ä–∞–ª–Ω–æ—Ç–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–æ—Å–∏ –æ—Ç–≥–æ–≤–æ—Ä–Ω–æ—Å—Ç –∑–∞ —Å—ä–±–∏—Ä–∞–Ω–µ—Ç–æ –∏ –∞–Ω–∞–ª–∏–∑–∞ –Ω–∞ –¥–∞–Ω–Ω–∏ –æ—Ç –≤—Å–∏—á–∫–∏ –ø–ª–æ—â–∞–¥–∫–∏.",
    "–¶–µ–Ω—Ç—Ä–∞–ª–Ω–æ—Ç–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–º–∞ –ø—Ä–∞–≤–æ –∏ –≤—ä–∑–º–æ–∂–Ω–æ—Å—Ç –¥–∞ –Ω–∞–ª–∞–≥–∞ —Å–ª–µ–¥–Ω–∏—Ç–µ –ø—Ä–æ–º–µ–Ω–∏ –≤ –ø—Ä–æ—Ü–µ—Å–∏—Ç–µ –Ω–∞ –æ—Ç–¥–µ–ª–Ω–∏—Ç–µ –ø–ª–æ—â–∞–¥–∫–∏.",
  ]

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    
    const submissionData = {
      metadata: {
        submittedAt: new Date().toISOString(),
        submittedBy: formData.filledBy || "Unknown",
        organizationName: formData.organizationName,
        eik: formData.eik,
        formVersion: "1.0",
        applicationId: `CERT-${Date.now()}`
      },
      formData: formData,
      selectedStandards: formData.standards,
      applicationTypes: formData.applicationTypes
    }
    
    const webhookUrl = process.env.NEXT_PUBLIC_N8N_WEBHOOK_URL || 'http://localhost:5678/webhook/25e22ef0-4a01-4ff5-a694-aa8f8058cb71'
    
    try {
      const n8nResponse = await fetch(webhookUrl, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(submissionData)
      })
      
      if (n8nResponse.ok) {
        console.log("–î–∞–Ω–Ω–∏—Ç–µ —Å–∞ –∏–∑–ø—Ä–∞—Ç–µ–Ω–∏ —É—Å–ø–µ—à–Ω–æ –∫—ä–º n8n")
        alert(`‚úÖ –ó–∞—è–≤–∫–∞—Ç–∞ –µ –∏–∑–ø—Ä–∞—Ç–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!\n\nüìß Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –µ –∏–∑–ø—Ä–∞—Ç–µ–Ω–æ\nüÜî ID –Ω–∞ –∑–∞—è–≤–∫–∞—Ç–∞: ${submissionData.metadata.applicationId}`)
      } else {
        console.error("–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑–ø—Ä–∞—â–∞–Ω–µ –∫—ä–º n8n:", n8nResponse.status)
        alert(`‚ö†Ô∏è –ò–º–∞ –ø—Ä–æ–±–ª–µ–º —Å –∏–∑–ø—Ä–∞—â–∞–Ω–µ—Ç–æ –Ω–∞ –∑–∞—è–≤–∫–∞—Ç–∞.\n\n–ì—Ä–µ—à–∫–∞: ${n8nResponse.status}\n–ú–æ–ª—è –æ–ø–∏—Ç–∞–π—Ç–µ –æ—Ç–Ω–æ–≤–æ –∏–ª–∏ —Å–µ —Å–≤—ä—Ä–∂–µ—Ç–µ —Å –ø–æ–¥–¥—Ä—ä–∂–∫–∞—Ç–∞.`)
      }
    } catch (error) {
      console.error("–ú—Ä–µ–∂–æ–≤–∞ –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑–ø—Ä–∞—â–∞–Ω–µ –∫—ä–º n8n:", error)
      
      const failedSubmissions = JSON.parse(localStorage.getItem('failedSubmissions') || '[]')
      failedSubmissions.push({
        timestamp: new Date().toISOString(),
        data: submissionData,
        applicationId: submissionData.metadata.applicationId
      })
      localStorage.setItem('failedSubmissions', JSON.stringify(failedSubmissions))
      
      alert(`‚ö†Ô∏è –ù—è–º–∞ –≤—Ä—ä–∑–∫–∞ —Å—ä—Å —Å—ä—Ä–≤—ä—Ä–∞.\n\n–î–∞–Ω–Ω–∏—Ç–µ —Å–∞ –∑–∞–ø–∞–∑–µ–Ω–∏ –ª–æ–∫–∞–ª–Ω–æ –∑–∞ –ø–æ-–∫—ä—Å–Ω–æ –∏–∑–ø—Ä–∞—â–∞–Ω–µ.\nID –Ω–∞ –∑–∞—è–≤–∫–∞—Ç–∞: ${submissionData.metadata.applicationId}\n\n–ü—Ä–æ–≤–µ—Ä–µ—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –≤—Ä—ä–∑–∫–∞—Ç–∞ –∏ –æ–ø–∏—Ç–∞–π—Ç–µ –æ—Ç–Ω–æ–≤–æ.`)
    }
    
    console.log("Form submitted:", submissionData)
  }

  return (
    <div className="max-w-4xl mx-auto space-y-8 bg-stone-50 min-h-screen p-6">
      <Card className="border-stone-200 shadow-lg">
        <CardHeader className="bg-white border-b border-stone-200">
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-4">
              <img
                src="https://hebbkx1anhila5yf.public.blob.vercel-storage.com/Incert-logo.jpg-RAjgjQOKJOMd1EiYNh1iCzND85lVgK.jpeg"
                alt="INCERT Logo"
                className="h-12 w-auto"
              />
            </div>
            <div className="text-right">
              <div className="text-sm text-stone-500">–°—Ç—Ä. 1 –æ—Ç 10</div>
              <div className="text-sm text-stone-500">–ó–∞—è–≤–∫–∞ –∑–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è (8/19.2.25)</div>
              <div className="text-sm text-stone-500">www.incert.bg</div>
            </div>
          </div>
          <div className="mt-4">
            <CardTitle className="text-2xl font-bold text-stone-800">–ó–∞—è–≤–∫–∞ –∑–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è</CardTitle>
            <CardDescription className="text-stone-600 mt-2">
              –ü–æ–ø—ä–ª–Ω–µ–Ω–∞—Ç–∞ –∑–∞—è–≤–∫–∞ –º–æ–∂–µ—Ç–µ –¥–∞ –∏–∑–ø—Ä–∞—Ç–∏—Ç–µ –∫–∞—Ç–æ –∏–∑–ø–æ–ª–∑–≤–∞—Ç–µ –±—É—Ç–æ–Ω–∞ –Ω–∞–π-–¥–æ–ª—É "–ò–∑–ø—Ä–∞—Ç–∏ –∑–∞—è–≤–∫–∞—Ç–∞"
            </CardDescription>
          </div>
        </CardHeader>
      </Card>

      <form onSubmit={handleSubmit} className="space-y-8">
        <Card className="border-stone-200 bg-white">
          <CardHeader className="bg-orange-50">
            <CardTitle className="text-stone-800">–í–∏–¥ –Ω–∞ –∑–∞—è–≤–∫–∞—Ç–∞</CardTitle>
            <CardDescription>–ú–æ–∂–µ—Ç–µ –¥–∞ –∏–∑–±–µ—Ä–µ—Ç–µ –Ω—è–∫–æ–ª–∫–æ –≤–∏–¥–∞ –∑–∞—è–≤–∫–∏</CardDescription>
          </CardHeader>
          <CardContent className="pt-6">
            <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
              {[
                { value: "new", label: "–ù–æ–≤–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è" },
                { value: "change", label: "–ü—Ä–æ–º—è–Ω–∞ –≤ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è" },
                { value: "renewal", label: "–ü–æ–¥–Ω–æ–≤—è–≤–∞–Ω–µ" },
                { value: "transfer", label: "–¢—Ä–∞–Ω—Å—Ñ–µ—Ä" },
              ].map((option) => (
                <div
                  key={option.value}
                  className="flex items-center space-x-2 p-3 border border-stone-200 rounded-lg hover:bg-orange-50 hover:border-orange-200"
                >
                  <Checkbox
                    id={option.value}
                    checked={formData.applicationTypes.includes(option.label)}
                    onCheckedChange={(checked) => handleApplicationTypeChange(option.value, option.label, checked as boolean)}
                  />
                  <Label htmlFor={option.value} className="cursor-pointer">
                    {option.label}
                  </Label>
                </div>
              ))}
            </div>
          </CardContent>
        </Card>

        <Card className="border-stone-200 bg-white">
          <CardHeader className="bg-orange-50">
            <CardTitle className="text-stone-800 flex items-center gap-2">
              <Building2 className="h-5 w-5 text-orange-600" />
              –°–µ–∫—Ü–∏—è 1. –î–∞–Ω–Ω–∏ –∑–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è—Ç–∞
            </CardTitle>
          </CardHeader>
          <CardContent className="pt-6 space-y-6">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div className="space-y-2">
                <Label htmlFor="organizationName">–ò–º–µ –Ω–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è—Ç–∞ *</Label>
                <Input
                  id="organizationName"
                  value={formData.organizationName}
                  onChange={(e) => setFormData((prev) => ({ ...prev, organizationName: e.target.value }))}
                  className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                  required
                />
              </div>
              <div className="space-y-2">
                <Label htmlFor="eik">–ï–ò–ö *</Label>
                <Input
                  id="eik"
                  value={formData.eik}
                  onChange={(e) => setFormData((prev) => ({ ...prev, eik: e.target.value }))}
                  className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                  required
                />
              </div>
            </div>

            <div className="space-y-2">
              <Label htmlFor="contactPerson">–õ–∏—Ü–µ –∑–∞ –∫–æ–Ω—Ç–∞–∫—Ç (–∏–º–µ –∏ –¥–ª—ä–∂–Ω–æ—Å—Ç) *</Label>
              <Input
                id="contactPerson"
                value={formData.contactPerson}
                onChange={(e) => setFormData((prev) => ({ ...prev, contactPerson: e.target.value }))}
                className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                required
              />
            </div>

            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div className="space-y-2">
                <Label htmlFor="email">–ò–º–µ–π–ª *</Label>
                <Input
                  id="email"
                  type="email"
                  value={formData.email}
                  onChange={(e) => setFormData((prev) => ({ ...prev, email: e.target.value }))}
                  className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                  required
                />
              </div>
              <div className="space-y-2">
                <Label htmlFor="phone">–¢–µ–ª–µ—Ñ–æ–Ω *</Label>
                <Input
                  id="phone"
                  value={formData.phone}
                  onChange={(e) => setFormData((prev) => ({ ...prev, phone: e.target.value }))}
                  className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                  required
                />
              </div>
            </div>

            <div className="space-y-2">
              <Label htmlFor="additionalInfo">–î–æ–ø—ä–ª–Ω–∏—Ç–µ–ª–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</Label>
              <Textarea
                id="additionalInfo"
                value={formData.additionalInfo}
                onChange={(e) => setFormData((prev) => ({ ...prev, additionalInfo: e.target.value }))}
                className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                placeholder="–Ω–∞–ø—Ä. –æ—Ç–Ω–æ—Å–Ω–æ –∏—Å–∫–∞–Ω–∞ –ø—Ä–æ–º—è–Ω–∞ –∏–ª–∏ –¥—Ä—É–≥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ"
                rows={3}
              />
            </div>
          </CardContent>
        </Card>

        <Card className="border-stone-200 bg-white">
          <CardHeader className="bg-orange-50">
            <CardTitle className="text-stone-800">–°—Ç–∞–Ω–¥–∞—Ä—Ç–∏ –∑–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è (–æ—Ç–±–µ–ª–µ–∂–µ—Ç–µ):</CardTitle>
            <CardDescription>–û—Ç–±–µ–ª–µ–∂–µ—Ç–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏—Ç–µ, –∑–∞ –∫–æ–∏—Ç–æ –∫–∞–Ω–¥–∏–¥–∞—Ç—Å—Ç–≤–∞—Ç–µ</CardDescription>
          </CardHeader>
          <CardContent className="pt-6">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              {standardsConfig.map((standard) => (
                <div
                  key={standard.id}
                  className="flex items-center space-x-3 p-4 border border-stone-200 rounded-lg hover:bg-orange-50 hover:border-orange-200"
                >
                  <Checkbox
                    id={standard.id}
                    checked={formData.standards.includes(standard.id)}
                    onCheckedChange={(checked) => handleStandardChange(standard.id, checked as boolean)}
                  />
                  <div className="flex items-center gap-3">
                    <div className={`p-2 rounded-full ${standard.color}`}>
                      <standard.icon className="h-4 w-4 text-white" />
                    </div>
                    <Label htmlFor={standard.id} className="cursor-pointer font-medium">
                      {standard.label}
                    </Label>
                  </div>
                </div>
              ))}
            </div>
          </CardContent>
        </Card>

        <Card className="border-stone-200 bg-white">
          <CardHeader className="bg-orange-50">
            <CardTitle className="text-stone-800">–û–±—Ö–≤–∞—Ç –Ω–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è</CardTitle>
          </CardHeader>
          <CardContent className="pt-6 space-y-6">
            <div className="space-y-2">
              <Label htmlFor="certificationScope">
                –ö—Ä–∞—Ç–∫–æ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –¥–µ–π–Ω–æ—Å—Ç–∏—Ç–µ, –ø—Ä–æ–¥—É–∫—Ç–∏—Ç–µ –∏/–∏–ª–∏ –ø—Ä–æ—Ü–µ—Å–∏—Ç–µ –≤ –æ–±—Ö–≤–∞—Ç–∞ *
              </Label>
              <Textarea
                id="certificationScope"
                value={formData.certificationScope}
                onChange={(e) => setFormData((prev) => ({ ...prev, certificationScope: e.target.value }))}
                className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                rows={4}
                required
              />
            </div>

            <Separator />

            <div className="space-y-4">
              <div className="flex items-center justify-between">
                <h4 className="font-semibold text-stone-800">–ü–ª–æ—â–∞–¥–∫–∏</h4>
                <Button type="button" onClick={addSite} variant="outline" size="sm">
                  –î–æ–±–∞–≤–∏ –ø–ª–æ—â–∞–¥–∫–∞
                </Button>
              </div>

              {formData.sites.map((site, index) => (
                <Card key={index} className="border-stone-100">
                  <CardContent className="pt-6">
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                      <div className="space-y-2">
                        <Label>–ê–¥—Ä–µ—Å –Ω–∞ –ø–ª–æ—â–∞–¥–∫–∞ {index + 1}</Label>
                        <Input
                          value={site.address}
                          onChange={(e) => updateSite(index, "address", e.target.value)}
                          className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                          placeholder="–ê–¥—Ä–µ—Å –Ω–∞ –ø–ª–æ—â–∞–¥–∫–∞—Ç–∞"
                        />
                      </div>
                      <div className="space-y-2">
                        <Label>–í–∏–¥ –Ω–∞ –ø–ª–æ—â–∞–¥–∫–∞—Ç–∞</Label>
                        <Select value={site.type} onValueChange={(value) => updateSite(index, "type", value)}>
                          <SelectTrigger className="border-stone-200 focus:border-orange-500 focus:ring-orange-500">
                            <SelectValue placeholder="–ò–∑–±–µ—Ä–µ—Ç–µ –≤–∏–¥" />
                          </SelectTrigger>
                          <SelectContent>
                            <SelectItem value="permanent">–ü–æ—Å—Ç–æ—è–Ω–Ω–∞</SelectItem>
                            <SelectItem value="temporary">–í—Ä–µ–º–µ–Ω–Ω–∞</SelectItem>
                          </SelectContent>
                        </Select>
                      </div>
                      <div className="space-y-2">
                        <Label>–ü—Ä–æ—Ü–µ—Å–∏, –¥–µ–π–Ω–æ—Å—Ç–∏, —Ä–∞–±–æ—Ç–Ω–æ –≤—Ä–µ–º–µ, —Å–º–µ–Ω–∏</Label>
                        <Textarea
                          value={site.processes}
                          onChange={(e) => updateSite(index, "processes", e.target.value)}
                          className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                          rows={2}
                        />
                      </div>
                      <div className="space-y-2">
                        <Label>–ë—Ä–æ–π —Å–ª—É–∂–∏—Ç–µ–ª–∏</Label>
                        <Input
                          value={site.employees}
                          onChange={(e) => updateSite(index, "employees", e.target.value)}
                          className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                          placeholder="–ë—Ä–æ–π —Å–ª—É–∂–∏—Ç–µ–ª–∏"
                        />
                      </div>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>

            {formData.sites.length > 1 && (
              <Card className="border-stone-100 bg-gray-50">
                <CardHeader>
                  <CardTitle className="text-sm text-gray-800">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –ø–ª–æ—â–∞–¥–∫–∏</CardTitle>
                  <CardDescription className="text-sm">
                    –û—Ç–±–µ–ª–µ–∂–µ—Ç–µ –∫–æ–∏ –æ—Ç —Å–ª–µ–¥–≤–∞—â–∏—Ç–µ —Ç–≤—ä—Ä–¥–µ–Ω–∏—è —Å–∞ –ø—Ä–∏–ª–æ–∂–∏–º–∏ –∑–∞ –í–∞—à–∞—Ç–∞ —Å–∏—Å—Ç–µ–º–∞ –∑–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="space-y-3">
                    {multiSiteOptions.map((option, index) => (
                      <div key={index} className="flex items-start space-x-3">
                        <Checkbox
                          id={`multisite-${index}`}
                          checked={formData.multiSiteManagement.includes(option)}
                          onCheckedChange={(checked) => handleMultiSiteChange(option, checked as boolean)}
                        />
                        <Label htmlFor={`multisite-${index}`} className="text-sm leading-relaxed cursor-pointer">
                          {option}
                        </Label>
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>
            )}
          </CardContent>
        </Card>

        <Card className="border-stone-200 bg-white">
          <CardHeader className="bg-orange-50">
            <CardTitle className="text-stone-800">–î–æ–ø—ä–ª–Ω–∏—Ç–µ–ª–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</CardTitle>
          </CardHeader>
          <CardContent className="pt-6 space-y-6">
            <div className="space-y-2">
              <Label htmlFor="outsourcedProcesses">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ –ø—Ä–æ—Ü–µ—Å–∏, –≤—ä–∑–ª–æ–∂–µ–Ω–∏ –Ω–∞ –≤—ä–Ω—à–Ω–∏ –∏–∑–ø—ä–ª–Ω–∏—Ç–µ–ª–∏</Label>
              <Textarea
                id="outsourcedProcesses"
                value={formData.outsourcedProcesses}
                onChange={(e) => setFormData((prev) => ({ ...prev, outsourcedProcesses: e.target.value }))}
                className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                rows={3}
              />
            </div>

            <div className="space-y-2">
              <Label htmlFor="consultantServices">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ –∏–∑–ø–æ–ª–∑–≤–∞–Ω–∏ –∫–æ–Ω—Å—É–ª—Ç–∞–Ω—Ç—Å–∫–∏ —É—Å–ª—É–≥–∏, –∞–∫–æ –∏–º–∞</Label>
              <Input
                id="consultantServices"
                value={formData.consultantServices}
                onChange={(e) => setFormData((prev) => ({ ...prev, consultantServices: e.target.value }))}
                className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                placeholder="–∏–º–µ –Ω–∞ –∫–æ–Ω—Å—É–ª—Ç–∞–Ω—Ç"
              />
            </div>

            <div className="space-y-2">
              <Label htmlFor="regulatoryRequirements">
                –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ –ø—Ä–∏–ª–æ–∂–∏–º–∏ –∑–∞ –æ–±—Ö–≤–∞—Ç–∞ –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω–∏ –∏ –¥—Ä—É–≥–∏ –∏–∑–∏—Å–∫–≤–∞–Ω–∏—è
              </Label>
              <Textarea
                id="regulatoryRequirements"
                value={formData.regulatoryRequirements}
                onChange={(e) => setFormData((prev) => ({ ...prev, regulatoryRequirements: e.target.value }))}
                className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                rows={3}
              />
            </div>

            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div className="space-y-3">
                <Label>–†–∞–∑—Ä–∞–±–æ—Ç–≤–∞—Ç–µ –ª–∏ –Ω–æ–≤–∏ –ø—Ä–æ–¥—É–∫—Ç–∏/—É—Å–ª—É–≥–∏?</Label>
                <RadioGroup
                  value={formData.developNewProducts}
                  onValueChange={(value) => setFormData((prev) => ({ ...prev, developNewProducts: value }))}
                >
                  <div className="flex items-center space-x-2">
                    <RadioGroupItem value="yes" id="develop-yes" />
                    <Label htmlFor="develop-yes">–î–∞</Label>
                  </div>
                  <div className="flex items-center space-x-2">
                    <RadioGroupItem value="no" id="develop-no" />
                    <Label htmlFor="develop-no">–ù–µ</Label>
                  </div>
                </RadioGroup>
              </div>

              <div className="space-y-3">
                <Label>–ü—Ä–æ–∏–∑–≤–µ–∂–¥–∞—Ç–µ –ª–∏ –ø—Ä–æ–¥—É–∫—Ç–∏?</Label>
                <RadioGroup
                  value={formData.manufactureProducts}
                  onValueChange={(value) => setFormData((prev) => ({ ...prev, manufactureProducts: value }))}
                >
                  <div className="flex items-center space-x-2">
                    <RadioGroupItem value="yes" id="manufacture-yes" />
                    <Label htmlFor="manufacture-yes">–î–∞</Label>
                  </div>
                  <div className="flex items-center space-x-2">
                    <RadioGroupItem value="no" id="manufacture-no" />
                    <Label htmlFor="manufacture-no">–ù–µ</Label>
                  </div>
                </RadioGroup>
              </div>
            </div>

            <div className="space-y-2">
              <Label htmlFor="otherCertifications">
                –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ –¥—Ä—É–≥–∏ –≤–∞–ª–∏–¥–Ω–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –Ω–∞ —Å–∏—Å—Ç–µ–º–∏ –∑–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
              </Label>
              <Textarea
                id="otherCertifications"
                value={formData.otherCertifications}
                onChange={(e) => setFormData((prev) => ({ ...prev, otherCertifications: e.target.value }))}
                className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                rows={3}
              />
            </div>

            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div className="space-y-2">
                <Label htmlFor="auditLanguage">–ï–∑–∏–∫ –Ω–∞ –æ–¥–∏—Ç–∞</Label>
                <Select
                  value={formData.auditLanguage}
                  onValueChange={(value) => setFormData((prev) => ({ ...prev, auditLanguage: value }))}
                >
                  <SelectTrigger className="border-stone-200 focus:border-orange-500 focus:ring-orange-500">
                    <SelectValue placeholder="–ò–∑–±–µ—Ä–µ—Ç–µ –µ–∑–∏–∫" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="bulgarian">–ë—ä–ª–≥–∞—Ä—Å–∫–∏</SelectItem>
                    <SelectItem value="english">–ê–Ω–≥–ª–∏–π—Å–∫–∏</SelectItem>
                  </SelectContent>
                </Select>
              </div>
              <div className="space-y-2">
                <Label htmlFor="auditDeadline">–ö—Ä–∞–µ–Ω —Å—Ä–æ–∫ –∑–∞ –æ–¥–∏—Ç–∞</Label>
                <Input
                  id="auditDeadline"
                  type="date"
                  value={formData.auditDeadline}
                  onChange={(e) => setFormData((prev) => ({ ...prev, auditDeadline: e.target.value }))}
                  className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                />
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Conditional Sections based on selected standards */}
        {formData.standards.includes("iso45001") && (
          <Card className="border-stone-200 bg-white">
            <CardHeader className="bg-orange-50">
              <CardTitle className="text-stone-800 flex items-center gap-2">
                <Shield className="h-5 w-5 text-orange-600" />
                –°–µ–∫—Ü–∏—è 2. –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç –∏ –∑–¥—Ä–∞–≤–µ –ø—Ä–∏ —Ä–∞–±–æ—Ç–∞: ISO 45001:2018
              </CardTitle>
            </CardHeader>
            <CardContent className="pt-6 space-y-4">
              <div className="space-y-2">
                <Label>
                  1. –û—Å–Ω–æ–≤–Ω–∏ –æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ —Ä–∏—Å–∫–æ–≤–µ –∑–∞ –∑–¥—Ä–∞–≤–µ—Ç–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—Ç–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–∞, —Å–≤—ä—Ä–∑–∞–Ω–∏ —Å –¥–µ–π–Ω–æ—Å—Ç—Ç–∞
                </Label>
                <Textarea
                  value={formData.iso45001.hazards}
                  onChange={(e) =>
                    setFormData((prev) => ({ ...prev, iso45001: { ...prev.iso45001, hazards: e.target.value } }))
                  }
                  className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                  rows={3}
                />
              </div>
              <div className="space-y-2">
                <Label>
                  2. –ò–∑–ø–æ–ª–∑–≤–∞—Ç–µ –ª–∏ –æ–ø–∞—Å–Ω–∏ —Ö–∏–º–∏—á–µ—Å–∫–∏ –≤–µ—â–µ—Å—Ç–≤–∞ –∏ —Å–º–µ—Å–∏ –≤ –¥–µ–π–Ω–æ—Å—Ç—Ç–∞ —Å–∏? –ê–∫–æ "–¥–∞", –º–æ–ª—è –ø–æ—Å–æ—á–µ—Ç–µ –∫–∞–∫–≤–∏.
                </Label>
                <Textarea
                  value={formData.iso45001.chemicals}
                  onChange={(e) =>
                    setFormData((prev) => ({ ...prev, iso45001: { ...prev.iso45001, chemicals: e.target.value } }))
                  }
                  className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                  rows={2}
                />
              </div>
              <div className="space-y-2">
                <Label>
                  3. –ò–∑–ø–æ–ª–∑–≤–∞—Ç–µ –ª–∏ –∏–Ω—Å—Ç–∞–ª–∞—Ü–∏–∏ –∏/–∏–ª–∏ –°–ü–û –ø–æ —Å–º–∏—Å—ä–ª–∞ –Ω–∞ –Ω–∞—Ü–∏–æ–Ω–∞–ª–Ω–æ—Ç–æ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—Å—Ç–≤–æ? –ê–∫–æ "–¥–∞", –º–æ–ª—è
                  —Ä–∞–∑—è—Å–Ω–µ—Ç–µ.
                </Label>
                <Textarea
                  value={formData.iso45001.installations}
                  onChange={(e) =>
                    setFormData((prev) => ({ ...prev, iso45001: { ...prev.iso45001, installations: e.target.value } }))
                  }
                  className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                  rows={2}
                />
              </div>
              <div className="space-y-2">
                <Label>4. –ü—Ä–∏–ª–æ–∂–∏–º–∏ –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω–∏ –∏–∑–∏—Å–∫–≤–∞–Ω–∏—è, —Å–≤—ä—Ä–∑–∞–Ω–∏ —Å –ë–ó–†. –ú–æ–ª—è –ø–æ—Å–æ—á–µ—Ç–µ.</Label>
                <Textarea
                  value={formData.iso45001.regulations}
                  onChange={(e) =>
                    setFormData((prev) => ({ ...prev, iso45001: { ...prev.iso45001, regulations: e.target.value } }))
                  }
                  className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                  rows={3}
                />
              </div>
              <div className="space-y-2">
                <Label>
                  5. –ü–µ—Ä—Å–æ–Ω–∞–ª, –∫–æ–π—Ç–æ —Ä–∞–±–æ—Ç–∏ –∏–∑–≤—ä–Ω –ø–ª–æ—â–∞–¥–∫–∞—Ç–∞ (–Ω–∞–ø—Ä. —à–æ—Ñ—å–æ—Ä–∏, –º–æ–Ω—Ç–∞–∂–Ω–∏—Ü–∏ –∏ –¥—Ä.), –∏–ª–∏ –Ω–∞ –≤—Ä–µ–º–µ–Ω–Ω–∏
                  –ø–ª–æ—â–∞–¥–∫–∏? –ú–æ–ª—è –ø–æ—è—Å–Ω–µ—Ç–µ –∏ –ø–æ—Å–æ—á–µ—Ç–µ –ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª–µ–Ω –±—Ä–æ–π.
                </Label>
                <Textarea
                  value={formData.iso45001.offSitePersonnel}
                  onChange={(e) =>
                    setFormData((prev) => ({
                      ...prev,
                      iso45001: { ...prev.iso45001, offSitePersonnel: e.target.value },
                    }))
                  }
                  className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                  rows={2}
                />
              </div>
              <div className="space-y-2">
                <Label>
                  6. –ü—Ä–µ–∑ –ø–æ—Å–ª–µ–¥–Ω–∏—Ç–µ –¥–≤–µ –≥–æ–¥–∏–Ω–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–∞–Ω–∏ –ª–∏ —Å–∞ —Ç—Ä—É–¥–æ–≤–∏ –∑–ª–æ–ø–æ–ª—É–∫–∏? –ê–∫–æ "–¥–∞", –º–æ–ª—è —Ä–∞–∑—è—Å–Ω–µ—Ç–µ.
                </Label>
                <Textarea
                  value={formData.iso45001.accidents}
                  onChange={(e) =>
                    setFormData((prev) => ({ ...prev, iso45001: { ...prev.iso45001, accidents: e.target.value } }))
                  }
                  className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                  rows={2}
                />
              </div>
              <div className="space-y-2">
                <Label>
                  7. –í–æ–¥—è—Ç –ª–∏ —Å–µ —Å—Ä–µ—â—É –≤–∞—Å —Å—ä–¥–µ–±–Ω–∏ –¥–µ–ª–∞ –∑–∞ –Ω–∞—Ä—É—à–∞–≤–∞–Ω–µ –Ω–∞ —Ç—Ä—É–¥–æ–≤–æ—Ç–æ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—Å—Ç–≤–æ –∏/–∏–ª–∏ –ø–æ –ë–ó–†? –ê–∫–æ
                  "–¥–∞", –º–æ–ª—è —Ä–∞–∑—è—Å–Ω–µ—Ç–µ.
                </Label>
                <Textarea
                  value={formData.iso45001.lawsuits}
                  onChange={(e) =>
                    setFormData((prev) => ({ ...prev, iso45001: { ...prev.iso45001, lawsuits: e.target.value } }))
                  }
                  className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                  rows={2}
                />
              </div>
            </CardContent>
          </Card>
        )}

        {formData.standards.includes("iso14001") && (
          <Card className="border-stone-200 bg-white">
            <CardHeader className="bg-orange-50">
              <CardTitle className="text-stone-800 flex items-center gap-2">
                <Leaf className="h-5 w-5 text-orange-600" />
                –°–µ–∫—Ü–∏—è 3. –û–∫–æ–ª–Ω–∞ —Å—Ä–µ–¥–∞: ISO 14001:2015
              </CardTitle>
            </CardHeader>
            <CardContent className="pt-6 space-y-4">
              <div className="space-y-2">
                <Label>1. –ó–Ω–∞—á–∏–º–∏ –∞—Å–ø–µ–∫—Ç–∏ –Ω–∞ –æ–∫–æ–ª–Ω–∞—Ç–∞ —Å—Ä–µ–¥–∞ –∏ —Å–≤—ä—Ä–∑–∞–Ω–∏—Ç–µ —Å —Ç—è—Ö –ø—Ä–æ—Ü–µ—Å–∏.</Label>
                <Textarea
                  value={formData.iso14001.aspects}
                  onChange={(e) =>
                    setFormData((prev) => ({ ...prev, iso14001: { ...prev.iso14001, aspects: e.target.value } }))
                  }
                  className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                  rows={3}
                />
              </div>
              <div className="space-y-2">
                <Label>
                  2. –î–µ–π–Ω–æ—Å—Ç—Ç–∞ –∏–∑–≤—ä—Ä—à–≤–∞ –ª–∏ —Å–µ –≤ –Ω–∞—Å–µ–ª–µ–Ω–æ –º—è—Å—Ç–æ –∏–ª–∏ –∏–Ω–¥—É—Å—Ç—Ä–∏–∞–ª–Ω–∞ –∑–æ–Ω–∞, —Å–µ–ª—Å–∫–∏ —Ä–∞–π–æ–Ω –∏–ª–∏ –∑–∞—â–∏—Ç–µ–Ω–∞
                  —Ç–µ—Ä–∏—Ç–æ—Ä–∏—è? –ú–æ–ª—è –¥–∞–π—Ç–µ –ø–æ—è—Å–Ω–µ–Ω–∏–µ.
                </Label>
                <Textarea
                  value={formData.iso14001.location}
                  onChange={(e) =>
                    setFormData((prev) => ({ ...prev, iso14001: { ...prev.iso14001, location: e.target.value } }))
                  }
                  className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                  rows={2}
                />
              </div>
              <div className="space-y-2">
                <Label>
                  3. –ü—Ä–∏–ª–æ–∂–∏–º–∏ –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω–∏ –∏–∑–∏—Å–∫–≤–∞–Ω–∏—è –∏ –ª–∏—Ü–µ–Ω–∑–∏ –∏ —Ä–∞–∑—Ä–µ—à–∏—Ç–µ–ª–Ω–∏ –∑–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ—Ç–æ –Ω–∞ –æ–∫–æ–ª–Ω–∞—Ç–∞ —Å—Ä–µ–¥–∞. –ú–æ–ª—è
                  –ø–æ—Å–æ—á–µ—Ç–µ.
                </Label>
                <Textarea
                  value={formData.iso14001.requirements}
                  onChange={(e) =>
                    setFormData((prev) => ({ ...prev, iso14001: { ...prev.iso14001, requirements: e.target.value } }))
                  }
                  className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                  rows={3}
                />
              </div>
              <div className="space-y-2">
                <Label>
                  4. –ò–º–∞ "–Ω–µ–ø—Ä–µ–∫–∏" –∞—Å–ø–µ–∫—Ç–∏ –Ω–∞ –æ–∫–æ–ª–Ω–∞—Ç–∞ —Å—Ä–µ–¥–∞ (–Ω–∞–ø—Ä. —É—Å–ª—É–≥–∏ –∑–∞ –ø—Ä–æ–µ–∫—Ç–∏—Ä–∞–Ω–µ)? –ú–æ–ª—è –æ–ø–∏—à–µ—Ç–µ –Ω–∞–∫—Ä–∞—Ç–∫–æ.
                </Label>
                <Textarea
                  value={formData.iso14001.indirectAspects}
                  onChange={(e) =>
                    setFormData((prev) => ({
                      ...prev,
                      iso14001: { ...prev.iso14001, indirectAspects: e.target.value },
                    }))
                  }
                  className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                  rows={2}
                />
              </div>
              <div className="space-y-2">
                <Label>
                  5. –†–∏—Å–∫–æ–≤–µ –æ—Ç –∑–Ω–∞—á–∏–º–∏ –µ–∫–æ–ª–æ–≥–∏—á–Ω–∏ —â–µ—Ç–∏ –≤ —Ä–µ–∑—É–ª—Ç–∞—Ç –æ—Ç —Å—ä—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–∏ –∏–ª–∏ –ø–æ–ª–∑–≤–∞–Ω–µ—Ç–æ –∏–º? –ú–æ–ª—è
                  –æ–ø–∏—à–µ—Ç–µ –Ω–∞–∫—Ä–∞—Ç–∫–æ.
                </Label>
                <Textarea
                  value={formData.iso14001.risks}
                  onChange={(e) =>
                    setFormData((prev) => ({ ...prev, iso14001: { ...prev.iso14001, risks: e.target.value } }))
                  }
                  className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                  rows={2}
                />
              </div>
              <div className="space-y-3">
                <Label>–ù–∏–≤–æ –Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –Ω–∞ –ø—Ä–æ—Ü–µ—Å–∏—Ç–µ</Label>
                <RadioGroup
                  value={formData.iso14001.automation}
                  onValueChange={(value) =>
                    setFormData((prev) => ({ ...prev, iso14001: { ...prev.iso14001, automation: value } }))
                  }
                  className="flex gap-6"
                >
                  <div className="flex items-center space-x-2">
                    <RadioGroupItem value="low" id="auto-low" />
                    <Label htmlFor="auto-low">–ù–∏—Å–∫–æ</Label>
                  </div>
                  <div className="flex items-center space-x-2">
                    <RadioGroupItem value="medium" id="auto-medium" />
                    <Label htmlFor="auto-medium">–°—Ä–µ–¥–Ω–æ</Label>
                  </div>
                  <div className="flex items-center space-x-2">
                    <RadioGroupItem value="high" id="auto-high" />
                    <Label htmlFor="auto-high">–í–∏—Å–æ–∫–æ</Label>
                  </div>
                </RadioGroup>
              </div>
            </CardContent>
          </Card>
        )}

        {formData.standards.includes("iso27001") && (
          <Card className="border-stone-200 bg-white">
            <CardHeader className="bg-orange-50">
              <CardTitle className="text-stone-800 flex items-center gap-2">
                <Lock className="h-5 w-5 text-orange-600" />
                –°–µ–∫—Ü–∏—è 4. –°–∏–≥—É—Ä–Ω–æ—Å—Ç –Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è—Ç–∞: ISO/IEC 27001:2022
              </CardTitle>
              <CardDescription>
                –ó–∞ –≤—Å—è–∫–∞ –æ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏—Ç–µ –º–æ–ª—è –æ—Ç–±–µ–ª–µ–∂–µ—Ç–µ —Å–∞–º–æ –µ–¥–Ω–æ —Ç–≤—ä—Ä–¥–µ–Ω–∏–µ, –∫–æ–µ—Ç–æ –Ω–∞–π-—Ç–æ—á–Ω–æ –æ–ø–∏—Å–≤–∞ —Å–∏—Ç—É–∞—Ü–∏—è—Ç–∞ –≤—ä–≤
                –í–∞—à–∞—Ç–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è.
              </CardDescription>
            </CardHeader>
            <CardContent className="pt-6 space-y-6">
              <div className="space-y-4">
                <div className="space-y-3">
                  <Label className="font-semibold">–ö–∞—Ç–µ–≥–æ—Ä–∏—è 1. –î–µ–π–Ω–æ—Å—Ç –Ω–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è—Ç–∞ –∏ –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω–∏ –∏–∑–∏—Å–∫–≤–∞–Ω–∏—è</Label>
                  <RadioGroup
                    value={formData.iso27001.category1}
                    onValueChange={(value) =>
                      setFormData((prev) => ({ ...prev, iso27001: { ...prev.iso27001, category1: value } }))
                    }
                  >
                    <div className="flex items-start space-x-2">
                      <RadioGroupItem value="non-critical" id="cat1-1" />
                      <Label htmlFor="cat1-1" className="text-sm leading-relaxed">
                        –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è—Ç–∞ —Ä–∞–±–æ—Ç–∏ –≤ –±–∏–∑–Ω–µ—Å —Å–µ–∫—Ç–æ—Ä–∏, –∫–æ–∏—Ç–æ –Ω–µ —Å–∞ –∫—Ä–∏—Ç–∏—á–Ω–∏ –∏ –Ω—è–º–∞ –≥–æ–ª—è–º –æ–±–µ–º –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω–∏
                        –∏–∑–∏—Å–∫–≤–∞–Ω–∏—è.
                      </Label>
                    </div>
                    <div className="flex items-start space-x-2">
                      <RadioGroupItem value="serves-critical" id="cat1-2" />
                      <Label htmlFor="cat1-2" className="text-sm leading-relaxed">
                        –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è—Ç–∞ –æ–±—Å–ª—É–∂–≤–∞ –∫–ª–∏–µ–Ω—Ç–∏ –æ—Ç –∫—Ä–∏—Ç–∏—á–Ω–∏ –±–∏–∑–Ω–µ—Å —Å–µ–∫—Ç–æ—Ä–∏.
                      </Label>
                    </div>
                    <div className="flex items-start space-x-2">
                      <RadioGroupItem value="critical" id="cat1-3" />
                      <Label htmlFor="cat1-3" className="text-sm leading-relaxed">
                        –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è—Ç–∞ —Ä–∞–±–æ—Ç–∏ –≤ –∫—Ä–∏—Ç–∏—á–Ω–∏ –±–∏–∑–Ω–µ—Å —Å–µ–∫—Ç–æ—Ä–∏.
                      </Label>
                    </div>
                  </RadioGroup>
                </div>

                <div className="space-y-3">
                  <Label className="font-semibold">–ö–∞—Ç–µ–≥–æ—Ä–∏—è 2. –ü—Ä–æ—Ü–µ—Å–∏ –∏ –∑–∞–¥–∞—á–∏</Label>
                  <RadioGroup
                    value={formData.iso27001.category2}
                    onValueChange={(value) =>
                      setFormData((prev) => ({ ...prev, iso27001: { ...prev.iso27001, category2: value } }))
                    }
                  >
                    <div className="flex items-start space-x-2">
                      <RadioGroupItem value="standard-repetitive" id="cat2-1" />
                      <Label htmlFor="cat2-1" className="text-sm leading-relaxed">
                        –ü—Ä–æ—Ü–µ—Å–∏—Ç–µ —Å–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏ —Å –ø–æ–≤—Ç–∞—Ä—è—â–∏ —Å–µ –∑–∞–¥–∞—á–∏, –º–Ω–æ–≥–æ —Å–ª—É–∂–∏—Ç–µ–ª–∏ —Å –µ–¥–Ω–∏ –∏ —Å—ä—â–∏ –∑–∞–¥–∞—á–∏. –ú–∞–ª–∫–æ
                        –ø—Ä–æ–¥—É–∫—Ç–∏ –∏ —É—Å–ª—É–≥–∏.
                      </Label>
                    </div>
                    <div className="flex items-start space-x-2">
                      <RadioGroupItem value="standard-non-repetitive" id="cat2-2" />
                      <Label htmlFor="cat2-2" className="text-sm leading-relaxed">
                        –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏, –Ω–æ –Ω–µ –ø–æ–≤—Ç–∞—Ä—è—â–∏ —Å–µ –ø—Ä–æ—Ü–µ—Å–∏, —Å –≥–æ–ª—è–º –±—Ä–æ–π –ø—Ä–æ–¥—É–∫—Ç–∏ –∏–ª–∏ —É—Å–ª—É–≥–∏.
                      </Label>
                    </div>
                    <div className="flex items-start space-x-2">
                      <RadioGroupItem value="complex" id="cat2-3" />
                      <Label htmlFor="cat2-3" className="text-sm leading-relaxed">
                        –°–ª–æ–∂–Ω–∏ –ø—Ä–æ—Ü–µ—Å–∏, –≥–æ–ª—è–º –±—Ä–æ–π –ø—Ä–æ–¥—É–∫—Ç–∏ –∏ —É—Å–ª—É–≥–∏, –º–Ω–æ–≥–æ –±–∏–∑–Ω–µ—Å –∑–≤–µ–Ω–∞
                      </Label>
                    </div>
                  </RadioGroup>
                </div>

                <div className="space-y-3">
                  <Label className="font-semibold">
                    –ö–∞—Ç–µ–≥–æ—Ä–∏—è 3. –°–∏—Å—Ç–µ–º–∞ –∑–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å–∏–≥—É—Ä–Ω–æ—Å—Ç—Ç–∞ –Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è—Ç–∞
                  </Label>
                  <RadioGroup
                    value={formData.iso27001.category3}
                    onValueChange={(value) =>
                      setFormData((prev) => ({ ...prev, iso27001: { ...prev.iso27001, category3: value } }))
                    }
                  >
                    <div className="flex items-start space-x-2">
                      <RadioGroupItem value="mature" id="cat3-1" />
                      <Label htmlFor="cat3-1" className="text-sm leading-relaxed">
                        –°–£–°–ò –µ –≤–Ω–µ–¥—Ä–µ–Ω–∞ –æ—Ç –ø–æ–≤–µ—á–µ –æ—Ç –≥–æ–¥–∏–Ω–∞ –∏/–∏–ª–∏ —Å–∞ –≤–Ω–µ–¥—Ä–µ–Ω–∏ –¥—Ä—É–≥–∏ –°–£.
                      </Label>
                    </div>
                    <div className="flex items-start space-x-2">
                      <RadioGroupItem value="partial" id="cat3-2" />
                      <Label htmlFor="cat3-2" className="text-sm leading-relaxed">
                        –ù—è–∫–æ–∏ –µ–ª–µ–º–µ–Ω—Ç–∏ –æ—Ç –¥—Ä—É–≥–∏ —Å–∏—Å—Ç–µ–º–∏ –∑–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∞ –≤–Ω–µ–¥—Ä–µ–Ω–∏, –Ω–æ –Ω–µ –≤—Å–∏—á–∫–∏.
                      </Label>
                    </div>
                    <div className="flex items-start space-x-2">
                      <RadioGroupItem value="new" id="cat3-3" />
                      <Label htmlFor="cat3-3" className="text-sm leading-relaxed">
                        –ù—è–º–∞ –≤–Ω–µ–¥—Ä–µ–Ω–∏ –¥—Ä—É–≥–∏ –°–£, –°–£–°–ò –µ –≤–Ω–µ–¥—Ä–µ–Ω–∞ –ø—Ä–µ–¥–∏ –ø–æ-–º–∞–ª–∫–æ –æ—Ç –µ–¥–Ω–∞ –≥–æ–¥–∏–Ω–∞.
                      </Label>
                    </div>
                  </RadioGroup>
                </div>

                <div className="space-y-3">
                  <Label className="font-semibold">–ö–∞—Ç–µ–≥–æ—Ä–∏—è 4. –°–ª–æ–∂–Ω–æ—Å—Ç –Ω–∞ IT –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞—Ç–∞</Label>
                  <RadioGroup
                    value={formData.iso27001.category4}
                    onValueChange={(value) =>
                      setFormData((prev) => ({ ...prev, iso27001: { ...prev.iso27001, category4: value } }))
                    }
                  >
                    <div className="flex items-start space-x-2">
                      <RadioGroupItem value="simple" id="cat4-1" />
                      <Label htmlFor="cat4-1" className="text-sm leading-relaxed">
                        –ú–∞–ª–∫–æ –Ω–∞ –±—Ä–æ–π –∏–ª–∏ —Å–∏–ª–Ω–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–∞–Ω–∏ IT –ø–ª–∞—Ç—Ñ–æ—Ä–º–∏, —Å—ä—Ä–≤—ä—Ä–∏, –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∏ —Å–∏—Å—Ç–µ–º–∏, –±–∞–∑–∏ –¥–∞–Ω–Ω–∏,
                        –º—Ä–µ–∂–∏ –∏ –¥—Ä.
                      </Label>
                    </div>
                    <div className="flex items-start space-x-2">
                      <RadioGroupItem value="moderate" id="cat4-2" />
                      <Label htmlFor="cat4-2" className="text-sm leading-relaxed">
                        –ù—è–∫–æ–ª–∫–æ —Ä–∞–∑–ª–∏—á–Ω–∏ IT –ø–ª–∞—Ç—Ñ–æ—Ä–º–∏, —Å—ä—Ä–≤—ä—Ä–∏, –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∏ —Å–∏—Å—Ç–µ–º–∏, –±–∞–∑–∏ –¥–∞–Ω–Ω–∏, –º—Ä–µ–∂–∏ –∏ –¥—Ä.
                      </Label>
                    </div>
                    <div className="flex items-start space-x-2">
                      <RadioGroupItem value="complex" id="cat4-3" />
                      <Label htmlFor="cat4-3" className="text-sm leading-relaxed">
                        –ú–Ω–æ–≥–æ –Ω–∞ –±—Ä–æ–π —Ä–∞–∑–ª–∏—á–Ω–∏ IT –ø–ª–∞—Ç—Ñ–æ—Ä–º–∏, —Å—ä—Ä–≤—ä—Ä–∏, –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∏ —Å–∏—Å—Ç–µ–º–∏, –±–∞–∑–∏ –¥–∞–Ω–Ω–∏, –º—Ä–µ–∂–∏ –∏ –¥—Ä.
                      </Label>
                    </div>
                  </RadioGroup>
                </div>

                <div className="space-y-3">
                  <Label className="font-semibold">
                    –ö–∞—Ç–µ–≥–æ—Ä–∏—è 5. –í—ä–∑–ª–∞–≥–∞–Ω–µ –Ω–∞ –≤—ä–Ω—à–Ω–∏ –∏–∑–ø—ä–ª–Ω–∏—Ç–µ–ª–∏, –¥–æ—Å—Ç–∞–≤—á–∏—Ü–∏ (–≤–∫–ª. –æ–±–ª–∞—á–Ω–∏ —É—Å–ª—É–≥–∏)
                  </Label>
                  <RadioGroup
                    value={formData.iso27001.category5}
                    onValueChange={(value) =>
                      setFormData((prev) => ({ ...prev, iso27001: { ...prev.iso27001, category5: value } }))
                    }
                  >
                    <div className="flex items-start space-x-2">
                      <RadioGroupItem value="minimal" id="cat5-1" />
                      <Label htmlFor="cat5-1" className="text-sm leading-relaxed">
                        –ù–µ–∑–Ω–∞—á–∏—Ç–µ–ª–Ω–∞ –∏–ª–∏ –Ω–∏–∫–∞–∫–≤–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç –æ—Ç –≤—ä–Ω—à–Ω–∏ –∏–∑–ø—ä–ª–Ω–∏—Ç–µ–ª–∏/–¥–æ—Å—Ç–∞–≤—á–∏—Ü–∏.
                      </Label>
                    </div>
                    <div className="flex items-start space-x-2">
                      <RadioGroupItem value="moderate" id="cat5-2" />
                      <Label htmlFor="cat5-2" className="text-sm leading-relaxed">
                        –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è—Ç–∞ –∑–∞–≤–∏—Å–∏ –æ—Ç –≤—ä–Ω—à–Ω–∏ –∏–∑–ø—ä–ª–Ω–∏—Ç–µ–ª–∏/–¥–æ—Å—Ç–∞–≤—á–∏—Ü–∏ –∑–∞ –Ω—è–∫–æ–∏ –±–∏–∑–Ω–µ—Å –ø—Ä–æ—Ü–µ—Å–∏ (–Ω–µ –∑–∞ –≤—Å–∏—á–∫–∏ –∏ –Ω–µ
                        –∑–∞ –≤–∞–∂–Ω–∏—Ç–µ).
                      </Label>
                    </div>
                    <div className="flex items-start space-x-2">
                      <RadioGroupItem value="high" id="cat5-3" />
                      <Label htmlFor="cat5-3" className="text-sm leading-relaxed">
                        –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è—Ç–∞ –∑–∞–≤–∏—Å–∏ –≤ –≥–æ–ª—è–º–∞ —Å—Ç–µ–ø–µ–Ω –æ—Ç –≤—ä–Ω—à–Ω–∏ –∏–∑–ø—ä–ª–Ω–∏—Ç–µ–ª–∏ –∏–ª–∏ –¥–æ—Å—Ç–∞–≤—á–∏—Ü–∏, –∫–æ–∏—Ç–æ –∏–º–∞—Ç –≥–æ–ª—è–º–æ
                        –≤—ä–∑–¥–µ–π—Å—Ç–≤–∏–µ –≤—ä—Ä—Ö—É –≤–∞–∂–Ω–∏ –±–∏–∑–Ω–µ—Å –ø—Ä–æ—Ü–µ—Å–∏.
                      </Label>
                    </div>
                  </RadioGroup>
                </div>

                <div className="space-y-3">
                  <Label className="font-semibold">–ö–∞—Ç–µ–≥–æ—Ä–∏—è 6. –°—Ç–µ–ø–µ–Ω –Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ –Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∏—Ç–µ —Å–∏—Å—Ç–µ–º–∏</Label>
                  <RadioGroup
                    value={formData.iso27001.category6}
                    onValueChange={(value) =>
                      setFormData((prev) => ({ ...prev, iso27001: { ...prev.iso27001, category6: value } }))
                    }
                  >
                    <div className="flex items-start space-x-2">
                      <RadioGroupItem value="minimal" id="cat6-1" />
                      <Label htmlFor="cat6-1" className="text-sm leading-relaxed">
                        –õ–∏–ø—Å–≤–∞ –∏–ª–∏ –∏–º–∞ –≤ –º–Ω–æ–≥–æ –º–∞–ª–∫–∞ —Å—Ç–µ–ø–µ–Ω —Å–æ–±—Å—Ç–≤–µ–Ω–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞ —Å–æ—Ñ—Ç—É–µ—Ä–Ω–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∏
                        —Å–∏—Å—Ç–µ–º–∏).
                      </Label>
                    </div>
                    <div className="flex items-start space-x-2">
                      <RadioGroupItem value="moderate" id="cat6-2" />
                      <Label htmlFor="cat6-2" className="text-sm leading-relaxed">
                        –ò–º–∞ –Ω—è–∫–æ–ª–∫–æ —Å–æ–±—Å—Ç–≤–µ–Ω–∏ (–∏–ª–∏ –≤—ä–∑–ª–æ–∂–µ–Ω–∏ –Ω–∞ –≤—ä–Ω—à–Ω–∏ –∏–∑–ø—ä–ª–Ω–∏—Ç–µ–ª–∏) —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞ —Å–æ—Ñ—Ç—É–µ—Ä–Ω–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
                        –∑–∞ –Ω—è–∫–æ–∏ –≤–∞–∂–Ω–∏ –±–∏–∑–Ω–µ—Å –ø—Ä–æ—Ü–µ—Å–∏.
                      </Label>
                    </div>
                    <div className="flex items-start space-x-2">
                      <RadioGroupItem value="extensive" id="cat6-3" />
                      <Label htmlFor="cat6-3" className="text-sm leading-relaxed">
                        –ò–º–∞ –≥–æ–ª—è–º –æ–±–µ–º —Å–æ–±—Å—Ç–≤–µ–Ω–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞ —Å–æ—Ñ—Ç—É–µ—Ä–Ω–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
                      </Label>
                    </div>
                  </RadioGroup>
                </div>
              </div>

              <Separator />

              <div className="space-y-4">
                <h4 className="font-semibold text-stone-800">–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å–ª—É–∂–∏—Ç–µ–ª–∏</h4>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div className="space-y-2">
                    <Label>
                      –î–æ—Å—Ç—ä–ø —Å–∞–º–æ –∑–∞ —á–µ—Ç–µ–Ω–µ: –°–ª—É–∂–∏—Ç–µ–ª–∏ —Å –¥–æ—Å—Ç—ä–ø –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–æ –∑–∞ —á–µ—Ç–µ–Ω–µ –Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è—Ç–∞, –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –∑–∞
                      –∏–∑–ø—ä–ª–Ω–µ–Ω–∏–µ –Ω–∞ —Ç–µ—Ö–Ω–∏—Ç–µ –∑–∞–¥—ä–ª–∂–µ–Ω–∏—è.
                    </Label>
                    <Input
                      value={formData.iso27001.employees.readOnly}
                      onChange={(e) =>
                        setFormData((prev) => ({
                          ...prev,
                          iso27001: {
                            ...prev.iso27001,
                            employees: { ...prev.iso27001.employees, readOnly: e.target.value },
                          },
                        }))
                      }
                      className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                      placeholder="–ë—Ä–æ–π –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ç–∞ –∏ –∫–æ–º–µ–Ω—Ç–∞—Ä"
                    />
                  </div>
                  <div className="space-y-2">
                    <Label>
                      –ë–µ–∑ —Ñ–∏–∑–∏—á–µ—Å–∫–∏ –¥–æ—Å—Ç—ä–ø: –õ–∏—Ü–∞, –∫–æ–∏—Ç–æ –Ω—è–º–∞—Ç –¥–æ—Å—Ç—ä–ø –¥–æ —Å—ä–æ—Ä—ä–∂–µ–Ω–∏—è—Ç–∞ –∑–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è,
                      –≤–∫–ª—é—á–µ–Ω–∏ –≤ –æ–±—Ö–≤–∞—Ç–∞ –Ω–∞ –°–£–°–ò.
                    </Label>
                    <Input
                      value={formData.iso27001.employees.noPhysicalAccess}
                      onChange={(e) =>
                        setFormData((prev) => ({
                          ...prev,
                          iso27001: {
                            ...prev.iso27001,
                            employees: { ...prev.iso27001.employees, noPhysicalAccess: e.target.value },
                          },
                        }))
                      }
                      className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                      placeholder="–ë—Ä–æ–π –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ç–∞ –∏ –∫–æ–º–µ–Ω—Ç–∞—Ä"
                    />
                  </div>
                  <div className="space-y-2">
                    <Label>
                      –û–≥—Ä–∞–Ω–∏—á–µ–Ω –¥–æ—Å—Ç—ä–ø: –õ–∏—Ü–∞, –∫–æ–∏—Ç–æ –∏–º–∞—Ç —Å–ø–µ—Ü–∏—Ñ–∏—á–µ–Ω, –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä–∞–Ω –æ–≥—Ä–∞–Ω–∏—á–µ–Ω –¥–æ—Å—Ç—ä–ø –¥–æ —Å—ä–æ—Ä—ä–∂–µ–Ω–∏—è—Ç–∞.
                    </Label>
                    <Input
                      value={formData.iso27001.employees.limitedAccess}
                      onChange={(e) =>
                        setFormData((prev) => ({
                          ...prev,
                          iso27001: {
                            ...prev.iso27001,
                            employees: { ...prev.iso27001.employees, limitedAccess: e.target.value },
                          },
                        }))
                      }
                      className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                      placeholder="–ë—Ä–æ–π –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ç–∞ –∏ –∫–æ–º–µ–Ω—Ç–∞—Ä"
                    />
                  </div>
                  <div className="space-y-2">
                    <Label>
                      –ü—ä–ª–µ–Ω –¥–æ—Å—Ç—ä–ø –∏ —Å—Ç—Ä–∏–∫—Ç–Ω–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è: –õ–∏—Ü–∞ —Å –Ω–∞–ª–æ–∂–µ–Ω–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∑–∞ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç—è–≤–∞–Ω–µ –Ω–∞
                      —Ä–∞–∑–∫—Ä–∏–≤–∞–Ω–µ—Ç–æ –Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è.
                    </Label>
                    <Input
                      value={formData.iso27001.employees.fullAccessRestricted}
                      onChange={(e) =>
                        setFormData((prev) => ({
                          ...prev,
                          iso27001: {
                            ...prev.iso27001,
                            employees: { ...prev.iso27001.employees, fullAccessRestricted: e.target.value },
                          },
                        }))
                      }
                      className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                      placeholder="–ë—Ä–æ–π –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ç–∞ –∏ –∫–æ–º–µ–Ω—Ç–∞—Ä"
                    />
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>
        )}

        {formData.standards.includes("iso22000") && (
          <Card className="border-stone-200 bg-white">
            <CardHeader className="bg-orange-50">
              <CardTitle className="text-stone-800 flex items-center gap-2">
                <Utensils className="h-5 w-5 text-orange-600" />
                –°–µ–∫—Ü–∏—è 5. –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç –Ω–∞ —Ö—Ä–∞–Ω–∏—Ç–µ: ISO 22000:2018
              </CardTitle>
            </CardHeader>
            <CardContent className="pt-6 space-y-4">
              <div className="space-y-2">
                <Label>
                  –ë—Ä–æ–π HACCP –ø–ª–∞–Ω–æ–≤–µ —Å—ä—Å —Å—ä–æ—Ç–≤–µ—Ç–Ω–∏—Ç–µ –∏–º –∏–º–µ–Ω–∞ –∑–∞ –≤—Å—è–∫–∞ –ø–ª–æ—â–∞–¥–∫–∞ –≤ –æ–±—Ö–≤–∞—Ç–∞ –Ω–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è, –≤–∫–ª.
                  –æ–ø–∞—Å–Ω–æ—Å—Ç–∏—Ç–µ –≤—ä–≤ –≤—Å–µ–∫–∏ HACCP –ø–ª–∞–Ω.
                </Label>
                <Textarea
                  value={formData.iso22000.haccp}
                  onChange={(e) =>
                    setFormData((prev) => ({ ...prev, iso22000: { ...prev.iso22000, haccp: e.target.value } }))
                  }
                  className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                  rows={4}
                />
              </div>
              <div className="space-y-2">
                <Label>
                  –û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç–∏ –∏ –ø—Ä–æ—Ü–µ—Å–∏, –ø—Ä–æ–¥—É–∫—Ç–æ–≤–∏ –ª–∏–Ω–∏–∏, –ø–µ—Ä—Å–æ–Ω–∞–ª, –≤–∏–¥ –∏ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ –Ω–∞ –∑–∞–¥–∞—á–∏—Ç–µ, –∫–æ–∏—Ç–æ
                  –∑–∞—Å—è–≥–∞—Ç –ë–•–ü, —Ä–∞–∑—Ä–∞–±–æ—Ç–≤–∞–Ω–µ –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç–∏, —Å–æ–±—Å—Ç–≤–µ–Ω–∏ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∏ –∏–∑–ø–∏—Ç–≤–∞–Ω–∏—è –∏ –¥—Ä.
                </Label>
                <Textarea
                  value={formData.iso22000.products}
                  onChange={(e) =>
                    setFormData((prev) => ({ ...prev, iso22000: { ...prev.iso22000, products: e.target.value } }))
                  }
                  className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                  rows={4}
                />
              </div>
              <div className="space-y-2">
                <Label>
                  –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ –Ω–∏–≤–æ –Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è, –∏–∑–ø–æ–ª–∑–≤–∞–Ω–µ –Ω–∞ –∑–∞—Ç–≤–æ—Ä–µ–Ω–∏ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–∏ —Å–∏—Å—Ç–µ–º–∏, –¥—Ä—É–≥–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏,
                  –º–µ—Ö–∞–Ω–∏–∑–∞—Ü–∏—è, —Ä—ä—á–µ–Ω —Ç—Ä—É–¥.
                </Label>
                <Textarea
                  value={formData.iso22000.automation}
                  onChange={(e) =>
                    setFormData((prev) => ({ ...prev, iso22000: { ...prev.iso22000, automation: e.target.value } }))
                  }
                  className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                  rows={3}
                />
              </div>
            </CardContent>
          </Card>
        )}

        {formData.standards.includes("iso39001") && (
          <Card className="border-stone-200 bg-white">
            <CardHeader className="bg-orange-50">
              <CardTitle className="text-stone-800 flex items-center gap-2">
                <Car className="h-5 w-5 text-orange-600" />
                –°–µ–∫—Ü–∏—è 6. –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç –Ω–∞ –¥–≤–∏–∂–µ–Ω–∏–µ—Ç–æ: ISO 39001:2012
              </CardTitle>
              <CardDescription>
                –û—Ç–±–µ–ª–µ–∂–µ—Ç–µ –µ–¥–Ω–æ –∏–ª–∏ –ø–æ–≤–µ—á–µ –æ—Ç —Å–ª–µ–¥–≤–∞—â–∏—Ç–µ —Ç–≤—ä—Ä–¥–µ–Ω–∏—è, –∫–æ–∏—Ç–æ —Å–∞ –ø—Ä–∏–ª–æ–∂–∏–º–∏ –∑–∞ –í–∞—à–∞—Ç–∞ —Å–∏—Å—Ç–µ–º–∞ –∑–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
                –Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—Ç–∞ –Ω–∞ –¥–≤–∏–∂–µ–Ω–∏–µ—Ç–æ:
              </CardDescription>
            </CardHeader>
            <CardContent className="pt-6 space-y-6">
              <div className="space-y-3">
                {[
                  "–°–ª—É–∂–∏—Ç–µ–ª–∏—Ç–µ –∏–∑–ø–æ–ª–∑–≤–∞—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–Ω —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç –¥–æ –∏ –æ—Ç —Ä–∞–±–æ—Ç–∞, –∏–ª–∏ –ø–æ –≤—Ä–µ–º–µ –Ω–∞ —Ä–∞–±–æ—Ç–∞ (–ø—É–±–ª–∏—á–µ–Ω —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç –∏–ª–∏ —á–∞—Å—Ç–Ω–∏ –ø—Ä–µ–≤–æ–∑–Ω–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –≤ –∫–∞—á–µ—Å—Ç–≤–æ—Ç–æ –Ω–∞ –ø—ä—Ç–Ω–∏—Ü–∏ –∏–ª–∏ –≤–æ–¥–∞—á–∏, –∏ –∫–∞—Ç–æ –ø–µ—à–µ—Ö–æ–¥—Ü–∏ –∏–ª–∏ –≤–µ–ª–æ—Å–∏–ø–µ–¥–∏—Å—Ç–∏).",
                  "–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è—Ç–∞ –∏–∑–≤—ä—Ä—à–≤–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç –Ω–∞ —Å—Ç–æ–∫–∏ –∏ –ø—ä—Ç–Ω–∏—Ü–∏, –≤–∫–ª—é—á–∏—Ç–µ–ª–Ω–æ –∏ —á—Ä–µ–∑ –ø–æ–¥–∏–∑–ø—ä–ª–Ω–∏—Ç–µ–ª–∏.",
                  "–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è—Ç–∞, –∏–∑–≤—ä—Ä—à–≤–∞ –¥–µ–π–Ω–æ—Å—Ç–∏, –∫–æ–∏—Ç–æ –≥–µ–Ω–µ—Ä–∏—Ä–∞—Ç —Ç—Ä–∞—Ñ–∏–∫ –∫—ä–º –∏ –æ—Ç –º–µ—Å—Ç–∞, –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–∞–Ω–∏ –∏–ª–∏ –ø–æ–≤–ª–∏—è–Ω–∏ –æ—Ç –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è—Ç–∞ (–Ω–∞–ø—Ä. —Å—É–ø–µ—Ä–º–∞—Ä–∫–µ—Ç–∏, —É—á–∏–ª–∏—â–∞ –∏–ª–∏ –¥—Ä. –º–µ—Å—Ç–∞ —Å –º–Ω–æ–≥–æ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–∏).",
                  "–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è—Ç–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—è —É—Å–ª—É–≥–∏ –∏ –ø—Ä–æ–¥—É–∫—Ç–∏ –∑–∞ —Å–∏—Å—Ç–µ–º–∞—Ç–∞ –∑–∞ –¥–≤–∏–∂–µ–Ω–∏–µ –ø–æ –ø—ä—Ç–∏—â–∞—Ç–∞ (–Ω–∞–ø—Ä. —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–∏ —É—Å–ª—É–≥–∏, —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, –ø–ª–∞–Ω–∏—Ä–∞–Ω–µ, –ø—Ä–æ–µ–∫—Ç–∏—Ä–∞–Ω–µ, –∏–∑–≥—Ä–∞–∂–¥–∞–Ω–µ –∏ –ø–æ–¥–¥—ä—Ä–∂–∞–Ω–µ –Ω–∞ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞, –ø—Ä–µ–≤–æ–∑–Ω–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –∏ —Å–≤—ä—Ä–∑–∞–Ω–∏ –ø—Ä–æ–¥—É–∫—Ç–∏, —Å–ø–µ—à–Ω–∞ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∞ –ø–æ–º–æ—â, –≥—Ä–∏–∂–∏ –ø—Ä–∏ —Ç—Ä–∞–≤–º–∏, —Ä–µ—Ö–∞–±–∏–ª–∏—Ç–∞—Ü–∏—è, –¥–µ–π–Ω–æ—Å—Ç–∏ –ø–æ –∫–æ–Ω—Ç—Ä–æ–ª–∞ –∏ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª–Ω–∏ –¥–µ–π–Ω–æ—Å—Ç–∏).",
                ].map((statement, index) => (
                  <div key={index} className="flex items-start space-x-3">
                    <Checkbox
                      id={`iso39001-${index}`}
                      checked={formData.iso39001.applicableStatements.includes(statement)}
                      onCheckedChange={(checked) => {
                        if (checked) {
                          setFormData((prev) => ({
                            ...prev,
                            iso39001: {
                              ...prev.iso39001,
                              applicableStatements: [...prev.iso39001.applicableStatements, statement],
                            },
                          }))
                        } else {
                          setFormData((prev) => ({
                            ...prev,
                            iso39001: {
                              ...prev.iso39001,
                              applicableStatements: prev.iso39001.applicableStatements.filter((s) => s !== statement),
                            },
                          }))
                        }
                      }}
                    />
                    <Label htmlFor={`iso39001-${index}`} className="text-sm leading-relaxed cursor-pointer">
                      {statement}
                    </Label>
                  </div>
                ))}
              </div>

              <div className="space-y-4">
                <div className="space-y-2">
                  <Label>
                    –ù–æ—Ä–º–∞—Ç–∏–≤–Ω–∏ –∏–∑–∏—Å–∫–≤–∞–Ω–∏—è –∏ –ª–∏—Ü–µ–Ω–∑–∏/—Ä–∞–∑—Ä–µ—à–∏—Ç–µ–ª–Ω–∏ –∑–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ—Ç–æ –Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—Ç–∞ –Ω–∞ –¥–≤–∏–∂–µ–Ω–∏–µ—Ç–æ –ø–æ
                    –ø—ä—Ç–∏—â–∞—Ç–∞. –ú–æ–ª—è –ø–æ—Å–æ—á–µ—Ç–µ.
                  </Label>
                  <Textarea
                    value={formData.iso39001.requirements}
                    onChange={(e) =>
                      setFormData((prev) => ({ ...prev, iso39001: { ...prev.iso39001, requirements: e.target.value } }))
                    }
                    className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                    rows={3}
                  />
                </div>
                <div className="space-y-2">
                  <Label>–ú–æ–ª—è –ø–æ—Å–æ—á–µ—Ç–µ –∫–æ–∏ –∏–∑–∏—Å–∫–≤–∞–Ω–∏—è –Ω–∞ ISO 39001 —Å–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏ –∫–∞—Ç–æ –Ω–µ–ø—Ä–∏–ª–æ–∂–∏–º–∏.</Label>
                  <Textarea
                    value={formData.iso39001.nonApplicable}
                    onChange={(e) =>
                      setFormData((prev) => ({
                        ...prev,
                        iso39001: { ...prev.iso39001, nonApplicable: e.target.value },
                      }))
                    }
                    className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                    rows={2}
                  />
                </div>
                <div className="space-y-2">
                  <Label>
                    –ü—Ä–µ–∑ –ø–æ—Å–ª–µ–¥–Ω–∏—Ç–µ 12 –º–µ—Å–µ—Ü–∞ –≤—ä–∑–Ω–∏–∫–≤–∞–ª–∏ –ª–∏ —Å–∞ –ü–¢–ü —Å —É—á–∞—Å—Ç–∏–µ—Ç–æ –Ω–∞ —Å–ª—É–∂–∏—Ç–µ–ª–∏ –∏–ª–∏ –≤ —Ä–∞–π–æ–Ω–∞, –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–∞–Ω –æ—Ç
                    –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è—Ç–∞? –ê–∫–æ "–¥–∞", –ø–æ—è—Å–Ω–µ—Ç–µ.
                  </Label>
                  <Textarea
                    value={formData.iso39001.accidents}
                    onChange={(e) =>
                      setFormData((prev) => ({ ...prev, iso39001: { ...prev.iso39001, accidents: e.target.value } }))
                    }
                    className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                    rows={2}
                  />
                </div>
              </div>
            </CardContent>
          </Card>
        )}

        {formData.standards.includes("iso37001") && (
          <Card className="border-stone-200 bg-white">
            <CardHeader className="bg-orange-50">
              <CardTitle className="text-stone-800 flex items-center gap-2">
                <AlertTriangle className="h-5 w-5 text-orange-600" />
                –°–µ–∫—Ü–∏—è 7. –ë–æ—Ä–±–∞ —Å –ø–æ–¥–∫—É–ø–≤–∞–Ω–µ—Ç–æ: ISO 37001:2016
              </CardTitle>
              <CardDescription>(–ê–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏—è —Å–∞–º–æ –∑–∞ —Ç–µ—Ä–∏—Ç–æ—Ä–∏—è—Ç–∞ –Ω–∞ –ë—ä–ª–≥–∞—Ä–∏—è)</CardDescription>
            </CardHeader>
            <CardContent className="pt-6 space-y-6">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div className="space-y-2">
                  <Label>
                    –ò–º–∞ –ª–∏ –ø—Ä–æ—Ü–µ—Å–∏ –∏/–∏–ª–∏ –¥–µ–π–Ω–æ—Å—Ç–∏, –∏–∑–≤—ä–Ω –æ–±—Ö–≤–∞—Ç–∞ –Ω–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è. –ê–∫–æ "–¥–∞", –ø–æ—Å–æ—á–µ—Ç–µ –∫–æ–∏ –∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∏—Ç–µ
                    –¥–∞ –Ω–µ –±—ä–¥–∞—Ç –≤–∫–ª—é—á–µ–Ω–∏.
                  </Label>
                  <Textarea
                    value={formData.iso37001.processesOutOfScope}
                    onChange={(e) =>
                      setFormData((prev) => ({
                        ...prev,
                        iso37001: { ...prev.iso37001, processesOutOfScope: e.target.value },
                      }))
                    }
                    className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                    rows={3}
                  />
                </div>
                <div className="space-y-2">
                  <Label>
                    –î—ä—Ä–∂–∞–≤–∞/-–∏, –≤ –∫–æ–∏—Ç–æ —Å–µ –æ—Å—ä—â–µ—Å—Ç–≤—è–≤–∞—Ç –¥–µ–π–Ω–æ—Å—Ç–∏—Ç–µ (–ù–µ –µ –æ–±–≤—ä—Ä–∑–∞–Ω–æ —Å–∞–º–æ —Å –ø–ª–æ—â–∞–¥–∫–∞—Ç–∞. –ù–∞–ø—Ä. –æ—Ç –æ—Ñ–∏—Å –≤
                    –ë—ä–ª–≥–∞—Ä–∏—è –º–æ–≥–∞—Ç –¥–∞ –±—ä–¥–∞—Ç –æ–±—Å–ª—É–∂–≤–∞–Ω–∏ –∫–ª–∏–µ–Ω—Ç–∏ –≤ —Ä–∞–∑–ª–∏—á–Ω–∏ –¥—ä—Ä–∂–∞–≤–∏).
                  </Label>
                  <Textarea
                    value={formData.iso37001.countries}
                    onChange={(e) =>
                      setFormData((prev) => ({ ...prev, iso37001: { ...prev.iso37001, countries: e.target.value } }))
                    }
                    className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                    rows={3}
                  />
                </div>
              </div>

              <div className="space-y-2">
                <Label>
                  –ü–æ—Å–æ—á–µ—Ç–µ –ø—Ä–∏–ª–æ–∂–∏–º–∏ –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω–∏ –∏–∑–∏—Å–∫–≤–∞–Ω–∏—è, –¥–æ–≥–æ–≤–æ—Ä–Ω–∏ –∏ –ø—Ä–æ—Ñ–µ—Å–∏–æ–Ω–∞–ª–Ω–∏ –∞–Ω–≥–∞–∂–∏–º–µ–Ω—Ç–∏ –∏ –∑–∞–¥—ä–ª–∂–µ–Ω–∏—è (–Ω–∞–ø—Ä.
                  –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω–∏ –∏–∑–∏—Å–∫–≤–∞–Ω–∏—è –∑–∞ –∑–∞–∫–æ–Ω–Ω–æ—Ç–æ —É–ø—Ä–∞–∂–Ω—è–≤–∞–Ω–µ –Ω–∞ –¥–µ–π–Ω–æ—Å—Ç—Ç–∞ –∏ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—Å—Ç–≤–∞, —á–µ —Å–∞ –∏–∑–ø—ä–ª–Ω–µ–Ω–∏ ‚Äì –Ω–æ–º–µ—Ä
                  –Ω–∞ –ª–∏—Ü–µ–Ω–∑, —Ä–∞–∑—Ä–µ—à–∏—Ç–µ–ª–Ω–æ, –≤—Ä—ä–∑–∫–∞ –∫—ä–º –ø—É–±–ª–∏—á–µ–Ω —Ä–µ–≥–∏—Å—Ç—ä—Ä; –¥—ä–ª–≥–æ—Å—Ä–æ—á–Ω–∏ –¥–æ–≥–æ–≤–æ—Ä–∏ –≤ –∏–∑–ø—ä–ª–Ω–µ–Ω–∏–µ ‚Äì –Ω–∞–ø—Ä.
                  —Ç–∞–∫–∏–≤–∞, –∫–æ–∏—Ç–æ –∏–º–∞—Ç –æ—â–µ –ø–æ–Ω–µ –¥–≤–µ –≥–æ–¥–∏–Ω–∏ —Å—Ä–æ–∫ –∑–∞ –∏–∑–ø—ä–ª–Ω–µ–Ω–∏–µ).
                </Label>
                <Textarea
                  value={formData.iso37001.requirements}
                  onChange={(e) =>
                    setFormData((prev) => ({ ...prev, iso37001: { ...prev.iso37001, requirements: e.target.value } }))
                  }
                  className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                  rows={4}
                />
              </div>

              <Separator />

              <div className="space-y-4">
                <h4 className="font-semibold text-stone-800">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ –ø–ª–æ—â–∞–¥–∫–∏ –∏ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª–Ω–∏ –ø—Ä–æ—Ü–µ—Å–∏</h4>
                <p className="text-sm text-stone-600">
                  –ú–æ–ª—è –ø–æ–ø—ä–ª–Ω–µ—Ç–µ –æ—Ç–¥–µ–ª–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ –∑–∞ –≤—Å–µ–∫–∏ –∞–¥—Ä–µ—Å, –∫–æ–π—Ç–æ –∂–µ–ª–∞–µ—Ç–µ –¥–∞ –±—ä–¥–µ –≤–∫–ª—é—á–µ–Ω –≤ –æ–±—Ö–≤–∞—Ç–∞ –Ω–∞
                  —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è.
                </p>

                <div className="space-y-4">
                  <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                    <div className="space-y-2">
                      <Label>–ê–¥—Ä–µ—Å –Ω–∞ –ø–ª–æ—â–∞–¥–∫–∞—Ç–∞</Label>
                      <Input
                        value={formData.iso37001.sites[0]?.address || ""}
                        onChange={(e) => {
                          const newSites = [...formData.iso37001.sites]
                          if (!newSites[0]) newSites[0] = { address: "", type: "", totalEmployees: "", processes: {} }
                          newSites[0].address = e.target.value
                          setFormData((prev) => ({ ...prev, iso37001: { ...prev.iso37001, sites: newSites } }))
                        }}
                        className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                      />
                    </div>
                    <div className="space-y-2">
                      <Label>–í–∏–¥ –ø–ª–æ—â–∞–¥–∫–∞—Ç–∞ (–Ω–∞–ø—Ä. —Ü–µ–Ω—Ç—Ä–∞–ª–µ–Ω –æ—Ñ–∏—Å, —Ç—ä—Ä–≥–æ–≤—Å–∫–∏ –æ—Ñ–∏—Å, –¥—Ä.)</Label>
                      <Input
                        value={formData.iso37001.sites[0]?.type || ""}
                        onChange={(e) => {
                          const newSites = [...formData.iso37001.sites]
                          if (!newSites[0]) newSites[0] = { address: "", type: "", totalEmployees: "", processes: {} }
                          newSites[0].type = e.target.value
                          setFormData((prev) => ({ ...prev, iso37001: { ...prev.iso37001, sites: newSites } }))
                        }}
                        className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                      />
                    </div>
                    <div className="space-y-2">
                      <Label>–û–±—â –±—Ä–æ–π –Ω–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞ –≤ –ø—Ä–æ—Ü–µ—Å–∏ —Å –≤–∏—Å–æ–∫ —Ä–∏—Å–∫ –æ—Ç –ø–æ–¥–∫—É–ø–≤–∞–Ω–µ</Label>
                      <Input
                        value={formData.iso37001.sites[0]?.totalEmployees || ""}
                        onChange={(e) => {
                          const newSites = [...formData.iso37001.sites]
                          if (!newSites[0]) newSites[0] = { address: "", type: "", totalEmployees: "", processes: {} }
                          newSites[0].totalEmployees = e.target.value
                          setFormData((prev) => ({ ...prev, iso37001: { ...prev.iso37001, sites: newSites } }))
                        }}
                        className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                      />
                    </div>
                  </div>

                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    {[
                      "–°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ",
                      "–ü—Ä–æ–¥–∞–∂–±–∏/–æ—Ñ–µ—Ä–∏—Ä–∞–Ω–µ",
                      "–§–∏–Ω–∞–Ω—Å–æ–≤–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ –∫–æ–Ω—Ç—Ä–æ–ª",
                      "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —á–æ–≤–µ—à–∫–∏ —Ä–µ—Å—É—Ä—Å–∏",
                      "–û–ø–µ—Ä–∞—Ç–∏–≤–µ–Ω –∫–æ–Ω—Ç—Ä–æ–ª –∏ –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç",
                      "–†–∞–±–æ—Ç–∞ —Å –ø–∞—Ä–∏ –≤ –±—Ä–æ–π",
                      "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –¥–∏—Å—Ç—Ä–∏–±—É—Ç–æ—Ä—Å–∫–∏/—Ç—ä—Ä–≥–æ–≤—Å–∫–∏ –º—Ä–µ–∂–∏",
                      "–î–µ–π–Ω–æ—Å—Ç, –∫–æ—è—Ç–æ –µ —Å–≤—ä—Ä–∑–∞–Ω–∞ —Å –ø–æ–ª—É—á–∞–≤–∞–Ω–µ –Ω–∞ –æ–±–ª–∞–≥–∏ –∏ –ø–æ–¥–∞—Ä—ä—Ü–∏",
                      "–ü—Ä–æ–≤–µ–∂–¥–∞–Ω–µ –Ω–∞ —Ç—Ä—ä–∂–Ω–∏ –ø—Ä–æ—Ü–µ–¥—É—Ä–∏ –∏ –∏–∑–±–æ—Ä –Ω–∞ –¥–æ—Å—Ç–∞–≤—á–∏—Ü–∏",
                      "–ü–æ–¥–¥—ä—Ä–∂–∞–Ω–µ –Ω–∞ –∫–æ–Ω—Ç–∞–∫—Ç —Å –∏–Ω—Å—Ç–∏—Ç—É—Ü–∏–∏ –∏ –∫–æ–Ω—Ç—Ä–æ–ª–Ω–∏ –æ—Ä–≥–∞–Ω–∏",
                      "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –¥–æ—Å—Ç–∞–≤—á–∏—Ü–∏",
                      "–í—ä—Ç—Ä–µ—à–µ–Ω –æ–¥–∏—Ç",
                      "–ü—Ä–µ–¥–æ—Å—Ç–∞–≤—è–Ω–µ –Ω–∞ –ò–¢ —É—Å–ª—É–≥–∏",
                      "–°–ø–æ–Ω—Å–æ—Ä—Å—Ç–≤–æ/—Ñ–∏–Ω–∞–Ω—Å–æ–≤–∞ –ø–æ–¥–∫—Ä–µ–ø–∞/–±–µ–∑–≤—ä–∑–º–µ–∑–¥–Ω–∞ –ø–æ–º–æ—â",
                      "–ü–æ–¥–¥—ä—Ä–∂–∞–Ω–µ –Ω–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è/–ª–∏—Ü–µ–Ω–∑–∏/—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏",
                      "–û—Å–∏–≥—É—Ä—è–≤–∞–Ω–µ –Ω–∞ —Ñ–∏–∑–∏—á–µ—Å–∫–∞ —Å–∏–≥—É—Ä–Ω–æ—Å—Ç",
                      "–ò–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è/–ª–∏—Ü–µ–Ω–∑–∏/—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏",
                      "–û–±—Ä–∞–±–æ—Ç–≤–∞–Ω–µ –Ω–∞ –∂–∞–ª–±–∏ –∏ –æ–ø–ª–∞–∫–≤–∞–Ω–∏—è",
                    ].map((process, index) => (
                      <div key={index} className="flex items-center gap-2">
                        <Label className="text-sm flex-1">{process}</Label>
                        <Input
                          className="w-20 border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                          placeholder="–ë—Ä–æ–π"
                          value={formData.iso37001.sites[0]?.processes[process] || ""}
                          onChange={(e) => {
                            const newSites = [...formData.iso37001.sites]
                            if (!newSites[0]) newSites[0] = { address: "", type: "", totalEmployees: "", processes: {} }
                            newSites[0].processes[process] = e.target.value
                            setFormData((prev) => ({ ...prev, iso37001: { ...prev.iso37001, sites: newSites } }))
                          }}
                        />
                      </div>
                    ))}
                  </div>
                </div>
              </div>

              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div className="space-y-2">
                  <Label>–û–±—â –±—Ä–æ–π –Ω–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞ –≤ –ø—Ä–æ—Ü–µ—Å–∏ —Å –Ω–∏—Å—ä–∫ —Ä–∏—Å–∫</Label>
                  <Input
                    value={formData.iso37001.lowRiskEmployees}
                    onChange={(e) =>
                      setFormData((prev) => ({
                        ...prev,
                        iso37001: { ...prev.iso37001, lowRiskEmployees: e.target.value },
                      }))
                    }
                    className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                  />
                </div>
                <div className="space-y-2">
                  <Label>
                    –ü—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª–µ–Ω –ø—Ä–æ—Ü–µ–Ω—Ç –æ—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç–µ –ø—Ä–µ–∑ –ø–æ—Å–ª–µ–¥–Ω–∞—Ç–∞ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–∞ –≥–æ–¥–∏–Ω–∞, –∫–æ–∏—Ç–æ —Å–∞ –æ—Ç –ø—É–±–ª–∏—á–Ω–∏
                    –∏–∑—Ç–æ—á–Ω–∏—Ü–∏?
                  </Label>
                  <Input
                    value={formData.iso37001.publicRevenue}
                    onChange={(e) =>
                      setFormData((prev) => ({
                        ...prev,
                        iso37001: { ...prev.iso37001, publicRevenue: e.target.value },
                      }))
                    }
                    className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                    placeholder="%"
                  />
                </div>
              </div>

              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div className="space-y-2">
                  <Label>
                    –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏ –ª–∏—Ü–∞, –≤—ä—Ä—Ö—É –∫–æ–∏—Ç–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è—Ç–∞ –∏–º–∞ –∫–æ–Ω—Ç—Ä–æ–ª (–Ω–∞–ø—Ä. —á—Ä–µ–∑ —Å–æ–±—Å—Ç–≤–µ–Ω–æ—Å—Ç, —É—á–∞—Å—Ç–∏–µ –≤
                    —É–ø—Ä–∞–≤–∏—Ç–µ–ª–Ω–∏—Ç–µ –æ—Ä–≥–∞–Ω–∏ –∏ –¥—Ä.)
                  </Label>
                  <Textarea
                    value={formData.iso37001.controlledEntities}
                    onChange={(e) =>
                      setFormData((prev) => ({
                        ...prev,
                        iso37001: { ...prev.iso37001, controlledEntities: e.target.value },
                      }))
                    }
                    className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                    rows={2}
                  />
                </div>
                <div className="space-y-2">
                  <Label>
                    –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏ –ª–∏—Ü–∞, –∫–æ–∏—Ç–æ –∏–º–∞—Ç –∫–æ–Ω—Ç—Ä–æ–ª –≤—ä—Ä—Ö—É –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è—Ç–∞ (–Ω–∞–ø—Ä. —á—Ä–µ–∑ —Å–æ–±—Å—Ç–≤–µ–Ω–æ—Å—Ç, —É—á–∞—Å—Ç–∏–µ –≤
                    —É–ø—Ä–∞–≤–∏—Ç–µ–ª–Ω–∏—Ç–µ –æ—Ä–≥–∞–Ω–∏ –∏ –¥—Ä.)
                  </Label>
                  <Textarea
                    value={formData.iso37001.controllingEntities}
                    onChange={(e) =>
                      setFormData((prev) => ({
                        ...prev,
                        iso37001: { ...prev.iso37001, controllingEntities: e.target.value },
                      }))
                    }
                    className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                    rows={2}
                  />
                </div>
              </div>

              <div className="space-y-2">
                <Label>
                  –õ–∏—Ü–∞ –Ω–∞ —Ä—ä–∫–æ–≤–æ–¥–Ω–∏ –¥–ª—ä–∂–Ω–æ—Å—Ç–∏ –∏–ª–∏ –Ω–∞ –¥–ª—ä–∂–Ω–æ—Å—Ç–∏ –Ω–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–Ω–æ –∏–∑–ø—ä–ª–Ω–µ–Ω–∏–µ, –±–∏–ª–∏ –ª–∏ —Å–∞ –≤ —Ç–æ–≤–∞ —Å–∏ –∫–∞—á–µ—Å—Ç–≤–æ
                  –æ–±–µ–∫—Ç –Ω–∞ —Ä–∞–∑—Å–ª–µ–¥–≤–∞–Ω–µ, –≤–∫–ª—é—á–∏—Ç–µ–ª–Ω–æ –ø–æ–≤–¥–∏–≥–∞–Ω–∏ –ª–∏ —Å–∞ –∏–º –æ–±–≤–∏–Ω–µ–Ω–∏—è, –∫–æ–∏—Ç–æ –ø–æ–ø–∞–¥–∞—Ç –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ—Ç–æ –∑–∞
                  "–ø–æ–¥–∫—É–ø–≤–∞–Ω–µ" –ø—Ä–µ–∑ –ø–æ—Å–ª–µ–¥–Ω–∏—Ç–µ –ø–µ—Ç –≥–æ–¥–∏–Ω–∏? –ê–∫–æ "–¥–∞", –º–æ–ª–∏–º –¥–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç–µ –¥–æ–ø—ä–ª–Ω–∏—Ç–µ–ª–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è.
                </Label>
                <Textarea
                  value={formData.iso37001.investigations}
                  onChange={(e) =>
                    setFormData((prev) => ({ ...prev, iso37001: { ...prev.iso37001, investigations: e.target.value } }))
                  }
                  className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                  rows={3}
                />
              </div>

              <div className="space-y-2">
                <Label>–î—Ä—É–≥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –∫–æ—è—Ç–æ –±–∏ –∏–º–∞–ª–∞ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ –∫—ä–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è—Ç–∞ –Ω–∞ –°–£–ë–ü?</Label>
                <Textarea
                  value={formData.iso37001.additionalInfo}
                  onChange={(e) =>
                    setFormData((prev) => ({
                      ...prev,
                      iso37001: { ...prev.iso37001, additionalInfo: e.target.value },
                    }))
                  }
                  className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                  rows={3}
                />
              </div>
            </CardContent>
          </Card>
        )}

        {formData.applicationTypes.includes("–¢—Ä–∞–Ω—Å—Ñ–µ—Ä") && (
          <Card className="border-stone-200 bg-white">
            <CardHeader className="bg-orange-50">
              <CardTitle className="text-stone-800">–°–µ–∫—Ü–∏—è 8. –¢—Ä–∞–Ω—Å—Ñ–µ—Ä –Ω–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è</CardTitle>
              <CardDescription>
                –¢–∞–∑–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–ª—É–∂–∏ –∑–∞ –ø—Ä–µ—Ü–µ–Ω–∫–∞ –Ω–∞ –≤—ä–∑–º–æ–∂–Ω–æ—Å—Ç—Ç–∞ –∑–∞ —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä –Ω–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è—Ç–∞ –∏ –∑–∞ –∏–∑–≥–æ—Ç–≤—è–Ω–µ –Ω–∞
                –æ—Ñ–µ—Ä—Ç–∞.
              </CardDescription>
            </CardHeader>
            <CardContent className="pt-6 space-y-6">
              <div className="space-y-3">
                <Label>
                  –í–∞–ª–∏–¥–µ–Ω –ª–∏ –µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ä—Ç, –∫–æ–π—Ç–æ –µ –æ–±–µ–∫—Ç –Ω–∞ —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä (–≤–∫–ª—é—á–∏—Ç–µ–ª–Ω–æ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—Ç–∞ –º—É –Ω–µ –µ –±–∏–ª–∞ –ø—Ä–µ–∫—Ä–∞—Ç–µ–Ω–∞
                  –æ—Ç –æ—Ä–≥–∞–Ω–∞ –∑–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è).
                </Label>
                <RadioGroup
                  value={formData.transfer.validCertificate}
                  onValueChange={(value) =>
                    setFormData((prev) => ({ ...prev, transfer: { ...prev.transfer, validCertificate: value } }))
                  }
                  className="flex gap-6"
                >
                  <div className="flex items-center space-x-2">
                    <RadioGroupItem value="yes" id="valid-yes" />
                    <Label htmlFor="valid-yes">–î–∞</Label>
                  </div>
                  <div className="flex items-center space-x-2">
                    <RadioGroupItem value="no" id="valid-no" />
                    <Label htmlFor="valid-no">–ù–µ</Label>
                  </div>
                </RadioGroup>
              </div>

              <div className="space-y-2">
                <Label>–ú–æ–ª—è –ø–æ—Å–æ—á–µ—Ç–µ –ø—Ä–∏—á–∏–Ω–∏—Ç–µ –∑–∞ —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–∞.</Label>
                <Textarea
                  value={formData.transfer.reasons}
                  onChange={(e) =>
                    setFormData((prev) => ({ ...prev, transfer: { ...prev.transfer, reasons: e.target.value } }))
                  }
                  className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                  rows={3}
                />
              </div>

              <div className="space-y-2">
                <Label>–ü–æ–ª—É—á–∞–≤–∞–ª–∏ –ª–∏ —Å—Ç–µ –æ–ø–ª–∞–∫–≤–∞–Ω–∏—è –æ—Ç –∫–ª–∏–µ–Ω—Ç–∏ –∏–ª–∏ –¥—Ä—É–≥–∏? –ê–∫–æ "–¥–∞", –º–æ–ª—è –ø–æ—è—Å–Ω–µ—Ç–µ.</Label>
                <Textarea
                  value={formData.transfer.complaints}
                  onChange={(e) =>
                    setFormData((prev) => ({ ...prev, transfer: { ...prev.transfer, complaints: e.target.value } }))
                  }
                  className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                  rows={2}
                />
              </div>

              <div className="space-y-2">
                <Label>
                  –ù–æ—Ä–º–∞—Ç–∏–≤–Ω–∏ –∏–∑–∏—Å–∫–≤–∞–Ω–∏—è, –∫–æ–∏—Ç–æ –≤–∏ –∑–∞–¥—ä–ª–∂–∞–≤–∞—Ç –¥–∞ –ø—Ä–∏—Ç–µ–∂–∞–≤–∞—Ç–µ –≤–∞–ª–∏–¥–µ–Ω —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç? –ê–∫–æ "–¥–∞", –º–æ–ª—è –æ–ø–∏—à–µ—Ç–µ.
                </Label>
                <Textarea
                  value={formData.transfer.requirements}
                  onChange={(e) =>
                    setFormData((prev) => ({ ...prev, transfer: { ...prev.transfer, requirements: e.target.value } }))
                  }
                  className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                  rows={2}
                />
              </div>

              <div className="space-y-4">
                <Label className="font-semibold text-base">
                  –ú–æ–ª—è –∏–∑–ø—Ä–∞—Ç–µ—Ç–µ –∫–æ–ø–∏—è –æ—Ç —Å–ª–µ–¥–Ω–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∏ –Ω–∞ valentina.dobreva@incert.bg –∏ —Å–µ —É–≤–µ—Ä–µ—Ç–µ, —á–µ —Å—Ç–µ –≥–∏ –ø—Ä–∏–ª–æ–∂–∏–ª–∏ –∫–∞—Ç–æ –æ—Ç–±–µ–ª–µ–∂–µ—Ç–µ:
                </Label>
                <div className="space-y-3">
                  {[
                    "–ü–æ—Å–ª–µ–¥–Ω–∏—è—Ç –∏–∑–¥–∞–¥–µ–Ω –≤–∞–ª–∏–¥–µ–Ω —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç.",
                    "–î–æ–∫–ª–∞–¥ –æ—Ç –µ—Ç–∞–ø 2 –Ω–∞ –ø—ä—Ä–≤–æ–Ω–∞—á–∞–ª–µ–Ω –æ–¥–∏—Ç –∏–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–∏—è –æ–¥–∏—Ç –∑–∞ –ø–æ–¥–Ω–æ–≤—è–≤–∞–Ω–µ –Ω–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è (–∫–æ–µ—Ç–æ –µ –ø—Ä–∏–ª–æ–∂–∏–º–æ).",
                    "–î–æ–∫–ª–∞–¥ –æ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏—è –ø—Ä–æ–≤–µ–¥–µ–Ω –Ω–∞–¥–∑–æ—Ä–µ–Ω –æ–¥–∏—Ç (–∞–∫–æ –µ –ø—Ä–∏–ª–æ–∂–∏–º–æ).",
                    "–î–æ–∫–∞–∑–∞—Ç–µ–ª—Å—Ç–≤–∞, —á–µ –≤—Å–∏—á–∫–∏ –Ω–µ—Å—ä–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è, –æ–ø–∏—Å–∞–Ω–∏ –≤ –¥–æ–∫–ª–∞–¥–∏—Ç–µ, —Å–∞ –±–∏–ª–∏ –∑–∞–∫—Ä–∏—Ç–∏ –∏–ª–∏ —Å–∞ –æ–¥–æ–±—Ä–µ–Ω–∏ –ø–ª–∞–Ω–æ–≤–µ –∑–∞ –ö–î.",
                    "–ü—Ä–æ–≥—Ä–∞–º–∞ –∑–∞ –æ–¥–∏—Ç–∏—Ç–µ –≤ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–æ–Ω–Ω–∏—è —Ü–∏–∫—ä–ª, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–µ–Ω–∞ –æ—Ç –æ—Ä–≥–∞–Ω–∞ –∑–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è, –∫–æ–π—Ç–æ –µ –∏–∑–¥–∞–ª —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞.",
                  ].map((document, index) => (
                    <div key={index} className="flex items-start space-x-3">
                      <Checkbox
                        id={`transfer-doc-${index}`}
                        checked={formData.transfer.documents.includes(document)}
                        onCheckedChange={(checked) => {
                          if (checked) {
                            setFormData((prev) => ({
                              ...prev,
                              transfer: { ...prev.transfer, documents: [...prev.transfer.documents, document] },
                            }))
                          } else {
                            setFormData((prev) => ({
                              ...prev,
                              transfer: {
                                ...prev.transfer,
                                documents: prev.transfer.documents.filter((d) => d !== document),
                              },
                            }))
                          }
                        }}
                      />
                      <Label htmlFor={`transfer-doc-${index}`} className="text-sm leading-relaxed cursor-pointer">
                        {document}
                      </Label>
                    </div>
                  ))}
                </div>
              </div>
            </CardContent>
          </Card>
        )}

        {formData.standards.length > 1 && (
          <Card className="border-stone-200 bg-white">
            <CardHeader className="bg-orange-50">
              <CardTitle className="text-stone-800">–°–µ–∫—Ü–∏—è 9. –ò–Ω—Ç–µ–≥—Ä–∏—Ä–∞–Ω–∏ —Å–∏—Å—Ç–µ–º–∏</CardTitle>
              <CardDescription>
                –ú–æ–ª—è –æ—Ç–±–µ–ª–µ–∂–µ—Ç–µ —Å–∞–º–æ —Ç–µ–∑–∏, –∫–æ–∏—Ç–æ —Å–∞ –ø—Ä–∏–ª–æ–∂–∏–º–∏ –∑–∞ –≤–Ω–µ–¥—Ä–µ–Ω–∞—Ç–∞ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–∞–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ –∑–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:
              </CardDescription>
            </CardHeader>
            <CardContent className="pt-6 space-y-3">
              {[
                "–†–∞–∑—Ä–∞–±–æ—Ç–µ–Ω–∞ –µ –æ–±—â–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –Ω–∞ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–∞–Ω–∞—Ç–∞ —Å–∏—Å—Ç–µ–º–∞ –∑–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, –≤–∫–ª—é—á–∏—Ç–µ–ª–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–∏ —Ä–∞–±–æ—Ç–Ω–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏;",
                "–ù–∞ –ø—Ä–µ–≥–ª–µ–¥–∏—Ç–µ –æ—Ç —Ä—ä–∫–æ–≤–æ–¥—Å—Ç–≤–æ—Ç–æ —Å–µ —Ä–∞–∑–≥–ª–µ–∂–¥–∞—Ç –æ–±—â–∞—Ç–∞ –±–∏–∑–Ω–µ—Å —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –∏ –ø–ª–∞–Ω–æ–≤–µ –∑–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ.",
                "–ü—Ä–∏ –≤—ä—Ç—Ä–µ—à–Ω–∏—Ç–µ –æ–¥–∏—Ç–∏ —Å–µ –∏–∑–ø–æ–ª–∑–≤–∞ \"–∏–Ω—Ç–µ–≥—Ä–∏—Ä–∞–Ω –ø–æ–¥—Ö–æ–¥\".",
                "–ü–æ–ª–∏—Ç–∏–∫–∞—Ç–∞ –∏ —Ü–µ–ª–∏—Ç–µ —Å–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–µ–Ω–∏ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–∞–Ω–æ —Ç.–µ. –æ–±—â–∏ —Å–∞ –∑–∞ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–∞–Ω–∞—Ç–∞ —Å–∏—Å—Ç–µ–º–∞.",
                "–í —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ—Ç–æ –Ω–∞ –ø—Ä–æ—Ü–µ—Å–∏—Ç–µ —Å–µ –∏–∑–ø–æ–ª–∑–≤–∞ \"–∏–Ω—Ç–µ–≥—Ä–∏—Ä–∞–Ω –ø–æ–¥—Ö–æ–¥\".",
                "–ü—Ä–∏ –ø—Ä–∏–ª–∞–≥–∞–Ω–µ—Ç–æ –Ω–∞ –º–µ—Ä–∫–∏ –∑–∞ –ø–æ–¥–æ–±—Ä–µ–Ω–∏–µ —Å–µ –∏–∑–ø–æ–ª–∑–≤–∞ \"–∏–Ω—Ç–µ–≥—Ä–∏—Ä–∞–Ω –ø–æ–¥—Ö–æ–¥\" (–Ω–∞–ø—Ä. –∏–∑–ø—ä–ª–Ω–µ–Ω–∏–µ –Ω–∞ –∫–æ—Ä–∏–≥–∏—Ä–∞—â–∏ –¥–µ–π—Å—Ç–≤–∏—è, –∏–∑–º–µ—Ä–≤–∞–Ω–µ, –Ω–µ–ø—Ä–µ–∫—ä—Å–Ω–∞—Ç–æ –ø–æ–¥–æ–±—Ä—è–≤–∞–Ω–µ).",
                "–û—Ç–≥–æ–≤–æ—Ä–Ω–æ—Å—Ç–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º–∞—Ç–∞ –∑–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏ \"–∏–Ω—Ç–µ–≥—Ä–∏—Ä–∞–Ω–æ\".",
              ].map((statement, index) => (
                <div key={index} className="flex items-start space-x-3">
                  <Checkbox
                    id={`integrated-${index}`}
                    checked={formData.integrated.statements.includes(statement)}
                    onCheckedChange={(checked) => {
                      if (checked) {
                        setFormData((prev) => ({
                          ...prev,
                          integrated: { ...prev.integrated, statements: [...prev.integrated.statements, statement] },
                        }))
                      } else {
                        setFormData((prev) => ({
                          ...prev,
                          integrated: {
                            ...prev.integrated,
                            statements: prev.integrated.statements.filter((s) => s !== statement),
                          },
                        }))
                      }
                    }}
                  />
                  <Label htmlFor={`integrated-${index}`} className="text-sm leading-relaxed cursor-pointer">
                    {statement}
                  </Label>
                </div>
              ))}
            </CardContent>
          </Card>
        )}

        <Card className="border-stone-200 bg-white">
          <CardHeader className="bg-orange-50">
            <CardTitle className="text-stone-800">–ü–æ–ø—ä–ª–Ω–∏–ª</CardTitle>
          </CardHeader>
          <CardContent className="pt-6 space-y-4">
            <div className="space-y-2">
              <Label htmlFor="filledBy">–ü–æ–ø—ä–ª–Ω–∏–ª (–∏–º–µ, —Ñ–∞–º–∏–ª–∏—è, –¥–ª—ä–∂–Ω–æ—Å—Ç) *</Label>
              <Input
                id="filledBy"
                value={formData.filledBy}
                onChange={(e) => setFormData((prev) => ({ ...prev, filledBy: e.target.value }))}
                className="border-stone-200 focus:border-orange-500 focus:ring-orange-500"
                required
              />
            </div>

            <div className="bg-orange-50 p-4 rounded-lg border border-orange-200">
              <p className="text-sm text-stone-800">
                <strong>–ó–∞–±–µ–ª–µ–∂–∫–∞:</strong> –ó–∞ –¥–∞ –∏–∑–ø—Ä–∞—Ç–∏—Ç–µ –∑–∞—è–≤–∫–∞—Ç–∞ –∏–∑–ø–æ–ª–∑–≤–∞–π—Ç–µ –±—É—Ç–æ–Ω–∞ –ø–æ –¥–æ–ª—É.
              </p>
            </div>

            <Button
              type="submit"
              className="w-full bg-orange-600 hover:bg-orange-700 text-white py-3 text-lg font-semibold"
              size="lg"
            >
              <Send className="h-5 w-5 mr-2" />
              –ò–∑–ø—Ä–∞—Ç–∏ –∑–∞—è–≤–∫–∞—Ç–∞
            </Button>
          </CardContent>
        </Card>
      </form>
    </div>
  )
}
